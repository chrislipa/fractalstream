//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Machine Code Emitter
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

unsigned ARMCodeEmitter::getBinaryCodeForInstr(const MachineInstr &MI) {
  static const unsigned InstBits[] = {
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    10485760U,	// ADCri
    10485760U,	// ADCrr
    10485760U,	// ADCrs
    8388608U,	// ADDSri
    8388608U,	// ADDSrr
    8388608U,	// ADDSrs
    8388608U,	// ADDri
    8388608U,	// ADDrr
    8388608U,	// ADDrs
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ANDri
    0U,	// ANDrr
    0U,	// ANDrs
    167772160U,	// B
    29360128U,	// BICri
    29360128U,	// BICrr
    29360128U,	// BICrs
    184549376U,	// BL
    19922736U,	// BLX
    184549376U,	// BL_pred
    8388608U,	// BR_JTadd
    84934656U,	// BR_JTm
    27262976U,	// BR_JTr
    0U,	// BX
    19922704U,	// BX_RET
    167772160U,	// Bcc
    24055568U,	// CLZ
    23068672U,	// CMNnzri
    23068672U,	// CMNnzrr
    23068672U,	// CMNnzrs
    23068672U,	// CMNri
    23068672U,	// CMNrr
    23068672U,	// CMNrs
    20971520U,	// CMPnzri
    20971520U,	// CMPnzrr
    20971520U,	// CMPnzrs
    20971520U,	// CMPri
    20971520U,	// CMPrr
    20971520U,	// CMPrs
    0U,	// CONSTPOOL_ENTRY
    0U,	// DWARF_LOC
    2097152U,	// EORri
    2097152U,	// EORrr
    2097152U,	// EORrs
    246418368U,	// FABSD
    246418112U,	// FABSS
    238029568U,	// FADDD
    238029312U,	// FADDS
    246680512U,	// FCMPED
    246680256U,	// FCMPES
    246746048U,	// FCMPEZD
    246745792U,	// FCMPEZS
    246418240U,	// FCPYD
    246418240U,	// FCPYDcc
    246417984U,	// FCPYS
    246417984U,	// FCPYScc
    246876864U,	// FCVTDS
    246877120U,	// FCVTSD
    243272448U,	// FDIVD
    243272192U,	// FDIVS
    219155200U,	// FLDD
    202377728U,	// FLDMD
    202377984U,	// FLDMS
    219154944U,	// FLDS
    234883840U,	// FMACD
    234883584U,	// FMACS
    205523728U,	// FMDRR
    206572304U,	// FMRRD
    235932176U,	// FMRS
    235932416U,	// FMSCD
    235932160U,	// FMSCS
    234883600U,	// FMSR
    250739216U,	// FMSTAT
    236980992U,	// FMULD
    236980736U,	// FMULS
    246483776U,	// FNEGD
    246483776U,	// FNEGDcc
    246483520U,	// FNEGS
    246483520U,	// FNEGScc
    234883904U,	// FNMACD
    234883648U,	// FNMACS
    235932480U,	// FNMSCD
    235932224U,	// FNMSCS
    236981056U,	// FNMULD
    236980800U,	// FNMULS
    246942656U,	// FSITOD
    246942400U,	// FSITOS
    246483904U,	// FSQRTD
    246483648U,	// FSQRTS
    218106624U,	// FSTD
    201329152U,	// FSTMD
    201329408U,	// FSTMS
    218106368U,	// FSTS
    238029632U,	// FSUBD
    238029376U,	// FSUBS
    247270336U,	// FTOSIZD
    247270080U,	// FTOSIZS
    247204800U,	// FTOUIZD
    247204544U,	// FTOUIZS
    246942528U,	// FUITOD
    246942272U,	// FUITOS
    135266304U,	// LDM
    135266304U,	// LDM_RET
    84934656U,	// LDR
    89128960U,	// LDRB
    72351744U,	// LDRB_POST
    91226112U,	// LDRB_PRE
    16777424U,	// LDRD
    17825968U,	// LDRH
    3145904U,	// LDRH_POST
    19923120U,	// LDRH_PRE
    17826000U,	// LDRSB
    3145936U,	// LDRSB_POST
    19923152U,	// LDRSB_PRE
    17826032U,	// LDRSH
    3145968U,	// LDRSH_POST
    19923184U,	// LDRSH_PRE
    68157440U,	// LDR_POST
    87031808U,	// LDR_PRE
    84934656U,	// LDRcp
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    2097296U,	// MLA
    27262976U,	// MOVCCi
    27262976U,	// MOVCCr
    27262976U,	// MOVCCs
    27262976U,	// MOVi
    0U,	// MOVi2pieces
    27262976U,	// MOVr
    27262976U,	// MOVrx
    27262976U,	// MOVs
    27262976U,	// MOVsra_flag
    27262976U,	// MOVsrl_flag
    144U,	// MUL
    31457280U,	// MVNi
    31457280U,	// MVNr
    31457280U,	// MVNs
    25165824U,	// ORRri
    25165824U,	// ORRrr
    25165824U,	// ORRrs
    8388608U,	// PICADD
    84934656U,	// PICLDR
    89128960U,	// PICLDRB
    17825968U,	// PICLDRH
    17826000U,	// PICLDRSB
    17826032U,	// PICLDRSH
    83886080U,	// PICSTR
    88080384U,	// PICSTRB
    16777392U,	// PICSTRH
    109051920U,	// PKHBT
    109051984U,	// PKHTB
    113184560U,	// REV
    113184688U,	// REV16
    117378992U,	// REVSH
    6291456U,	// RSBSri
    6291456U,	// RSBSrs
    6291456U,	// RSBri
    6291456U,	// RSBrs
    14680064U,	// RSCri
    14680064U,	// RSCrs
    12582912U,	// SBCri
    12582912U,	// SBCrr
    12582912U,	// SBCrs
    16777344U,	// SMLABB
    16777408U,	// SMLABT
    14680208U,	// SMLAL
    16777376U,	// SMLATB
    16777440U,	// SMLATT
    18874496U,	// SMLAWB
    18874560U,	// SMLAWT
    122683408U,	// SMMLA
    122683600U,	// SMMLS
    122744848U,	// SMMUL
    23068800U,	// SMULBB
    23068864U,	// SMULBT
    12583056U,	// SMULL
    23068832U,	// SMULTB
    23068896U,	// SMULTT
    18874528U,	// SMULWB
    18874592U,	// SMULWT
    134217728U,	// STM
    83886080U,	// STR
    88080384U,	// STRB
    71303168U,	// STRB_POST
    90177536U,	// STRB_PRE
    16777456U,	// STRD
    16777392U,	// STRH
    2097328U,	// STRH_POST
    18874544U,	// STRH_PRE
    67108864U,	// STR_POST
    85983232U,	// STR_PRE
    4194304U,	// SUBSri
    4194304U,	// SUBSrr
    4194304U,	// SUBSrs
    4194304U,	// SUBri
    4194304U,	// SUBrr
    4194304U,	// SUBrs
    111149168U,	// SXTABrr
    111149168U,	// SXTABrr_rot
    112197744U,	// SXTAHrr
    112197744U,	// SXTAHrr_rot
    112132208U,	// SXTBr
    112132208U,	// SXTBr_rot
    113180784U,	// SXTHr
    113180784U,	// SXTHr_rot
    18874368U,	// TEQri
    18874368U,	// TEQrr
    18874368U,	// TEQrs
    184549376U,	// TPsoft
    16777216U,	// TSTri
    16777216U,	// TSTrr
    16777216U,	// TSTrs
    4194448U,	// UMAAL
    10485904U,	// UMLAL
    8388752U,	// UMULL
    115343472U,	// UXTABrr
    115343472U,	// UXTABrr_rot
    116392048U,	// UXTAHrr
    116392048U,	// UXTAHrr_rot
    114229360U,	// UXTB16r
    114229360U,	// UXTB16r_rot
    116326512U,	// UXTBr
    116326512U,	// UXTBr_rot
    117375088U,	// UXTHr
    117375088U,	// UXTHr_rot
    0U,	// tADC
    0U,	// tADDS
    0U,	// tADDhirr
    0U,	// tADDi3
    0U,	// tADDi8
    0U,	// tADDrPCi
    0U,	// tADDrSPi
    0U,	// tADDrr
    0U,	// tADDspi
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tAND
    0U,	// tASRri
    0U,	// tASRrr
    0U,	// tB
    0U,	// tBIC
    0U,	// tBL
    0U,	// tBLXi
    0U,	// tBLXr
    0U,	// tBR_JTr
    0U,	// tBX
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBcc
    0U,	// tBfar
    0U,	// tCMN
    0U,	// tCMNNZ
    0U,	// tCMPNZi8
    0U,	// tCMPNZr
    0U,	// tCMPi8
    0U,	// tCMPr
    0U,	// tEOR
    0U,	// tLDR
    0U,	// tLDRB
    0U,	// tLDRH
    0U,	// tLDRSB
    0U,	// tLDRSH
    0U,	// tLDRcp
    0U,	// tLDRpci
    0U,	// tLDRspi
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tLSLri
    0U,	// tLSLrr
    0U,	// tLSRri
    0U,	// tLSRrr
    0U,	// tMOVCCr
    0U,	// tMOVi8
    0U,	// tMOVr
    0U,	// tMUL
    0U,	// tMVN
    0U,	// tNEG
    0U,	// tORR
    0U,	// tPICADD
    0U,	// tPOP
    0U,	// tPOP_RET
    0U,	// tPUSH
    0U,	// tREV
    0U,	// tREV16
    0U,	// tREVSH
    0U,	// tROR
    0U,	// tRestore
    0U,	// tSBC
    0U,	// tSTR
    0U,	// tSTRB
    0U,	// tSTRH
    0U,	// tSTRspi
    0U,	// tSUBS
    0U,	// tSUBi3
    0U,	// tSUBi8
    0U,	// tSUBrr
    0U,	// tSUBspi
    0U,	// tSXTB
    0U,	// tSXTH
    0U,	// tSpill
    0U,	// tTPsoft
    0U,	// tTST
    0U,	// tUXTB
    0U,	// tUXTH
    0U
  };
  const unsigned opcode = MI.getOpcode();
  unsigned Value = InstBits[opcode];
  unsigned op = 0;
  op = op;  // suppress warning
  switch (opcode) {
    case ARM::ADCri:
    case ARM::ADCrr:
    case ARM::ADCrs:
    case ARM::ADDSri:
    case ARM::ADDSrr:
    case ARM::ADDSrs:
    case ARM::ADDri:
    case ARM::ADDrr:
    case ARM::ADDrs:
    case ARM::ADJCALLSTACKDOWN:
    case ARM::ADJCALLSTACKUP:
    case ARM::ANDri:
    case ARM::ANDrr:
    case ARM::ANDrs:
    case ARM::B:
    case ARM::BICri:
    case ARM::BICrr:
    case ARM::BICrs:
    case ARM::BL:
    case ARM::BLX:
    case ARM::BL_pred:
    case ARM::BR_JTadd:
    case ARM::BR_JTm:
    case ARM::BR_JTr:
    case ARM::BX:
    case ARM::BX_RET:
    case ARM::Bcc:
    case ARM::CLZ:
    case ARM::CMNnzri:
    case ARM::CMNnzrr:
    case ARM::CMNnzrs:
    case ARM::CMNri:
    case ARM::CMNrr:
    case ARM::CMNrs:
    case ARM::CMPnzri:
    case ARM::CMPnzrr:
    case ARM::CMPnzrs:
    case ARM::CMPri:
    case ARM::CMPrr:
    case ARM::CMPrs:
    case ARM::CONSTPOOL_ENTRY:
    case ARM::DWARF_LOC:
    case ARM::EORri:
    case ARM::EORrr:
    case ARM::EORrs:
    case ARM::FABSD:
    case ARM::FABSS:
    case ARM::FADDD:
    case ARM::FADDS:
    case ARM::FCMPED:
    case ARM::FCMPES:
    case ARM::FCMPEZD:
    case ARM::FCMPEZS:
    case ARM::FCPYD:
    case ARM::FCPYDcc:
    case ARM::FCPYS:
    case ARM::FCPYScc:
    case ARM::FCVTDS:
    case ARM::FCVTSD:
    case ARM::FDIVD:
    case ARM::FDIVS:
    case ARM::FLDD:
    case ARM::FLDMD:
    case ARM::FLDMS:
    case ARM::FLDS:
    case ARM::FMACD:
    case ARM::FMACS:
    case ARM::FMDRR:
    case ARM::FMRRD:
    case ARM::FMRS:
    case ARM::FMSCD:
    case ARM::FMSCS:
    case ARM::FMSR:
    case ARM::FMSTAT:
    case ARM::FMULD:
    case ARM::FMULS:
    case ARM::FNEGD:
    case ARM::FNEGDcc:
    case ARM::FNEGS:
    case ARM::FNEGScc:
    case ARM::FNMACD:
    case ARM::FNMACS:
    case ARM::FNMSCD:
    case ARM::FNMSCS:
    case ARM::FNMULD:
    case ARM::FNMULS:
    case ARM::FSITOD:
    case ARM::FSITOS:
    case ARM::FSQRTD:
    case ARM::FSQRTS:
    case ARM::FSTD:
    case ARM::FSTMD:
    case ARM::FSTMS:
    case ARM::FSTS:
    case ARM::FSUBD:
    case ARM::FSUBS:
    case ARM::FTOSIZD:
    case ARM::FTOSIZS:
    case ARM::FTOUIZD:
    case ARM::FTOUIZS:
    case ARM::FUITOD:
    case ARM::FUITOS:
    case ARM::LDM:
    case ARM::LDM_RET:
    case ARM::LDR:
    case ARM::LDRB:
    case ARM::LDRB_POST:
    case ARM::LDRB_PRE:
    case ARM::LDRD:
    case ARM::LDRH:
    case ARM::LDRH_POST:
    case ARM::LDRH_PRE:
    case ARM::LDRSB:
    case ARM::LDRSB_POST:
    case ARM::LDRSB_PRE:
    case ARM::LDRSH:
    case ARM::LDRSH_POST:
    case ARM::LDRSH_PRE:
    case ARM::LDR_POST:
    case ARM::LDR_PRE:
    case ARM::LDRcp:
    case ARM::LEApcrel:
    case ARM::LEApcrelJT:
    case ARM::MLA:
    case ARM::MOVCCi:
    case ARM::MOVCCr:
    case ARM::MOVCCs:
    case ARM::MOVi:
    case ARM::MOVi2pieces:
    case ARM::MOVr:
    case ARM::MOVrx:
    case ARM::MOVs:
    case ARM::MOVsra_flag:
    case ARM::MOVsrl_flag:
    case ARM::MUL:
    case ARM::MVNi:
    case ARM::MVNr:
    case ARM::MVNs:
    case ARM::ORRri:
    case ARM::ORRrr:
    case ARM::ORRrs:
    case ARM::PICADD:
    case ARM::PICLDR:
    case ARM::PICLDRB:
    case ARM::PICLDRH:
    case ARM::PICLDRSB:
    case ARM::PICLDRSH:
    case ARM::PICSTR:
    case ARM::PICSTRB:
    case ARM::PICSTRH:
    case ARM::PKHBT:
    case ARM::PKHTB:
    case ARM::REV:
    case ARM::REV16:
    case ARM::REVSH:
    case ARM::RSBSri:
    case ARM::RSBSrs:
    case ARM::RSBri:
    case ARM::RSBrs:
    case ARM::RSCri:
    case ARM::RSCrs:
    case ARM::SBCri:
    case ARM::SBCrr:
    case ARM::SBCrs:
    case ARM::SMLABB:
    case ARM::SMLABT:
    case ARM::SMLAL:
    case ARM::SMLATB:
    case ARM::SMLATT:
    case ARM::SMLAWB:
    case ARM::SMLAWT:
    case ARM::SMMLA:
    case ARM::SMMLS:
    case ARM::SMMUL:
    case ARM::SMULBB:
    case ARM::SMULBT:
    case ARM::SMULL:
    case ARM::SMULTB:
    case ARM::SMULTT:
    case ARM::SMULWB:
    case ARM::SMULWT:
    case ARM::STM:
    case ARM::STR:
    case ARM::STRB:
    case ARM::STRB_POST:
    case ARM::STRB_PRE:
    case ARM::STRD:
    case ARM::STRH:
    case ARM::STRH_POST:
    case ARM::STRH_PRE:
    case ARM::STR_POST:
    case ARM::STR_PRE:
    case ARM::SUBSri:
    case ARM::SUBSrr:
    case ARM::SUBSrs:
    case ARM::SUBri:
    case ARM::SUBrr:
    case ARM::SUBrs:
    case ARM::SXTABrr:
    case ARM::SXTABrr_rot:
    case ARM::SXTAHrr:
    case ARM::SXTAHrr_rot:
    case ARM::SXTBr:
    case ARM::SXTBr_rot:
    case ARM::SXTHr:
    case ARM::SXTHr_rot:
    case ARM::TEQri:
    case ARM::TEQrr:
    case ARM::TEQrs:
    case ARM::TPsoft:
    case ARM::TSTri:
    case ARM::TSTrr:
    case ARM::TSTrs:
    case ARM::UMAAL:
    case ARM::UMLAL:
    case ARM::UMULL:
    case ARM::UXTABrr:
    case ARM::UXTABrr_rot:
    case ARM::UXTAHrr:
    case ARM::UXTAHrr_rot:
    case ARM::UXTB16r:
    case ARM::UXTB16r_rot:
    case ARM::UXTBr:
    case ARM::UXTBr_rot:
    case ARM::UXTHr:
    case ARM::UXTHr_rot:
    case ARM::tADC:
    case ARM::tADDS:
    case ARM::tADDhirr:
    case ARM::tADDi3:
    case ARM::tADDi8:
    case ARM::tADDrPCi:
    case ARM::tADDrSPi:
    case ARM::tADDrr:
    case ARM::tADDspi:
    case ARM::tADJCALLSTACKDOWN:
    case ARM::tADJCALLSTACKUP:
    case ARM::tAND:
    case ARM::tASRri:
    case ARM::tASRrr:
    case ARM::tB:
    case ARM::tBIC:
    case ARM::tBL:
    case ARM::tBLXi:
    case ARM::tBLXr:
    case ARM::tBR_JTr:
    case ARM::tBX:
    case ARM::tBX_RET:
    case ARM::tBX_RET_vararg:
    case ARM::tBcc:
    case ARM::tBfar:
    case ARM::tCMN:
    case ARM::tCMNNZ:
    case ARM::tCMPNZi8:
    case ARM::tCMPNZr:
    case ARM::tCMPi8:
    case ARM::tCMPr:
    case ARM::tEOR:
    case ARM::tLDR:
    case ARM::tLDRB:
    case ARM::tLDRH:
    case ARM::tLDRSB:
    case ARM::tLDRSH:
    case ARM::tLDRcp:
    case ARM::tLDRpci:
    case ARM::tLDRspi:
    case ARM::tLEApcrel:
    case ARM::tLEApcrelJT:
    case ARM::tLSLri:
    case ARM::tLSLrr:
    case ARM::tLSRri:
    case ARM::tLSRrr:
    case ARM::tMOVCCr:
    case ARM::tMOVi8:
    case ARM::tMOVr:
    case ARM::tMUL:
    case ARM::tMVN:
    case ARM::tNEG:
    case ARM::tORR:
    case ARM::tPICADD:
    case ARM::tPOP:
    case ARM::tPOP_RET:
    case ARM::tPUSH:
    case ARM::tREV:
    case ARM::tREV16:
    case ARM::tREVSH:
    case ARM::tROR:
    case ARM::tRestore:
    case ARM::tSBC:
    case ARM::tSTR:
    case ARM::tSTRB:
    case ARM::tSTRH:
    case ARM::tSTRspi:
    case ARM::tSUBS:
    case ARM::tSUBi3:
    case ARM::tSUBi8:
    case ARM::tSUBrr:
    case ARM::tSUBspi:
    case ARM::tSXTB:
    case ARM::tSXTH:
    case ARM::tSpill:
    case ARM::tTPsoft:
    case ARM::tTST:
    case ARM::tUXTB:
    case ARM::tUXTH: {
      break;
    }
  default:
    cerr << "Not supported instr: " << MI << "\n";
    abort();
  }
  return Value;
}

