//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Register Information Source Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

namespace llvm {

namespace {     // Register classes...
  // CRBITRC Register Class...
  static const unsigned CRBITRC[] = {
    PPC::CR0LT, PPC::CR0GT, PPC::CR0EQ, PPC::CR0UN, PPC::CR1LT, PPC::CR1GT, PPC::CR1EQ, PPC::CR1UN, PPC::CR2LT, PPC::CR2GT, PPC::CR2EQ, PPC::CR2UN, PPC::CR3LT, PPC::CR3GT, PPC::CR3EQ, PPC::CR3UN, PPC::CR4LT, PPC::CR4GT, PPC::CR4EQ, PPC::CR4UN, PPC::CR5LT, PPC::CR5GT, PPC::CR5EQ, PPC::CR5UN, PPC::CR6LT, PPC::CR6GT, PPC::CR6EQ, PPC::CR6UN, PPC::CR7LT, PPC::CR7GT, PPC::CR7EQ, PPC::CR7UN, 
  };

  // CRRC Register Class...
  static const unsigned CRRC[] = {
    PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, PPC::CR2, PPC::CR3, PPC::CR4, 
  };

  // CTRRC Register Class...
  static const unsigned CTRRC[] = {
    PPC::CTR, 
  };

  // CTRRC8 Register Class...
  static const unsigned CTRRC8[] = {
    PPC::CTR8, 
  };

  // F4RC Register Class...
  static const unsigned F4RC[] = {
    PPC::F0, PPC::F1, PPC::F2, PPC::F3, PPC::F4, PPC::F5, PPC::F6, PPC::F7, PPC::F8, PPC::F9, PPC::F10, PPC::F11, PPC::F12, PPC::F13, PPC::F14, PPC::F15, PPC::F16, PPC::F17, PPC::F18, PPC::F19, PPC::F20, PPC::F21, PPC::F22, PPC::F23, PPC::F24, PPC::F25, PPC::F26, PPC::F27, PPC::F28, PPC::F29, PPC::F30, PPC::F31, 
  };

  // F8RC Register Class...
  static const unsigned F8RC[] = {
    PPC::F0, PPC::F1, PPC::F2, PPC::F3, PPC::F4, PPC::F5, PPC::F6, PPC::F7, PPC::F8, PPC::F9, PPC::F10, PPC::F11, PPC::F12, PPC::F13, PPC::F14, PPC::F15, PPC::F16, PPC::F17, PPC::F18, PPC::F19, PPC::F20, PPC::F21, PPC::F22, PPC::F23, PPC::F24, PPC::F25, PPC::F26, PPC::F27, PPC::F28, PPC::F29, PPC::F30, PPC::F31, 
  };

  // G8RC Register Class...
  static const unsigned G8RC[] = {
    PPC::X2, PPC::X3, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::X30, PPC::X29, PPC::X28, PPC::X27, PPC::X26, PPC::X25, PPC::X24, PPC::X23, PPC::X22, PPC::X21, PPC::X20, PPC::X19, PPC::X18, PPC::X17, PPC::X16, PPC::X15, PPC::X14, PPC::X31, PPC::X13, PPC::X0, PPC::X1, PPC::LR8, 
  };

  // GPRC Register Class...
  static const unsigned GPRC[] = {
    PPC::R2, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::R30, PPC::R29, PPC::R28, PPC::R27, PPC::R26, PPC::R25, PPC::R24, PPC::R23, PPC::R22, PPC::R21, PPC::R20, PPC::R19, PPC::R18, PPC::R17, PPC::R16, PPC::R15, PPC::R14, PPC::R13, PPC::R31, PPC::R0, PPC::R1, PPC::LR, 
  };

  // VRRC Register Class...
  static const unsigned VRRC[] = {
    PPC::V2, PPC::V3, PPC::V4, PPC::V5, PPC::V0, PPC::V1, PPC::V6, PPC::V7, PPC::V8, PPC::V9, PPC::V10, PPC::V11, PPC::V12, PPC::V13, PPC::V14, PPC::V15, PPC::V16, PPC::V17, PPC::V18, PPC::V19, PPC::V20, PPC::V21, PPC::V22, PPC::V23, PPC::V24, PPC::V25, PPC::V26, PPC::V27, PPC::V28, PPC::V29, PPC::V30, PPC::V31, 
  };

  // CRBITRCVTs Register Class Value Types...
  static const MVT CRBITRCVTs[] = {
    MVT::i32, MVT::Other
  };

  // CRRCVTs Register Class Value Types...
  static const MVT CRRCVTs[] = {
    MVT::i32, MVT::Other
  };

  // CTRRCVTs Register Class Value Types...
  static const MVT CTRRCVTs[] = {
    MVT::i32, MVT::Other
  };

  // CTRRC8VTs Register Class Value Types...
  static const MVT CTRRC8VTs[] = {
    MVT::i64, MVT::Other
  };

  // F4RCVTs Register Class Value Types...
  static const MVT F4RCVTs[] = {
    MVT::f32, MVT::Other
  };

  // F8RCVTs Register Class Value Types...
  static const MVT F8RCVTs[] = {
    MVT::f64, MVT::Other
  };

  // G8RCVTs Register Class Value Types...
  static const MVT G8RCVTs[] = {
    MVT::i64, MVT::Other
  };

  // GPRCVTs Register Class Value Types...
  static const MVT GPRCVTs[] = {
    MVT::i32, MVT::Other
  };

  // VRRCVTs Register Class Value Types...
  static const MVT VRRCVTs[] = {
    MVT::v16i8, MVT::v8i16, MVT::v4i32, MVT::v4f32, MVT::Other
  };

}  // end anonymous namespace

namespace PPC {   // Register class instances
  CRBITRCClass	CRBITRCRegClass;
  CRRCClass	CRRCRegClass;
  CTRRCClass	CTRRCRegClass;
  CTRRC8Class	CTRRC8RegClass;
  F4RCClass	F4RCRegClass;
  F8RCClass	F8RCRegClass;
  G8RCClass	G8RCRegClass;
  GPRCClass	GPRCRegClass;
  VRRCClass	VRRCRegClass;

  // CRBITRC Register Class sub-classes...
  static const TargetRegisterClass* const CRBITRCSubclasses [] = {
    NULL
  };

  // CRRC Register Class sub-classes...
  static const TargetRegisterClass* const CRRCSubclasses [] = {
    NULL
  };

  // CTRRC Register Class sub-classes...
  static const TargetRegisterClass* const CTRRCSubclasses [] = {
    NULL
  };

  // CTRRC8 Register Class sub-classes...
  static const TargetRegisterClass* const CTRRC8Subclasses [] = {
    NULL
  };

  // F4RC Register Class sub-classes...
  static const TargetRegisterClass* const F4RCSubclasses [] = {
    NULL
  };

  // F8RC Register Class sub-classes...
  static const TargetRegisterClass* const F8RCSubclasses [] = {
    NULL
  };

  // G8RC Register Class sub-classes...
  static const TargetRegisterClass* const G8RCSubclasses [] = {
    NULL
  };

  // GPRC Register Class sub-classes...
  static const TargetRegisterClass* const GPRCSubclasses [] = {
    NULL
  };

  // VRRC Register Class sub-classes...
  static const TargetRegisterClass* const VRRCSubclasses [] = {
    NULL
  };

  // CRBITRC Register Class super-classes...
  static const TargetRegisterClass* const CRBITRCSuperclasses [] = {
    NULL
  };

  // CRRC Register Class super-classes...
  static const TargetRegisterClass* const CRRCSuperclasses [] = {
    NULL
  };

  // CTRRC Register Class super-classes...
  static const TargetRegisterClass* const CTRRCSuperclasses [] = {
    NULL
  };

  // CTRRC8 Register Class super-classes...
  static const TargetRegisterClass* const CTRRC8Superclasses [] = {
    NULL
  };

  // F4RC Register Class super-classes...
  static const TargetRegisterClass* const F4RCSuperclasses [] = {
    NULL
  };

  // F8RC Register Class super-classes...
  static const TargetRegisterClass* const F8RCSuperclasses [] = {
    NULL
  };

  // G8RC Register Class super-classes...
  static const TargetRegisterClass* const G8RCSuperclasses [] = {
    NULL
  };

  // GPRC Register Class super-classes...
  static const TargetRegisterClass* const GPRCSuperclasses [] = {
    NULL
  };

  // VRRC Register Class super-classes...
  static const TargetRegisterClass* const VRRCSuperclasses [] = {
    NULL
  };


CRBITRCClass::CRBITRCClass()  : TargetRegisterClass(CRBITRCRegClassID, CRBITRCVTs, CRBITRCSubclasses, CRBITRCSuperclasses, 4, 4, -1, CRBITRC, CRBITRC + 32) {}

CRRCClass::CRRCClass()  : TargetRegisterClass(CRRCRegClassID, CRRCVTs, CRRCSubclasses, CRRCSuperclasses, 4, 4, 1, CRRC, CRRC + 8) {}

CTRRCClass::CTRRCClass()  : TargetRegisterClass(CTRRCRegClassID, CTRRCVTs, CTRRCSubclasses, CTRRCSuperclasses, 4, 4, 1, CTRRC, CTRRC + 1) {}

CTRRC8Class::CTRRC8Class()  : TargetRegisterClass(CTRRC8RegClassID, CTRRC8VTs, CTRRC8Subclasses, CTRRC8Superclasses, 8, 8, 1, CTRRC8, CTRRC8 + 1) {}

F4RCClass::F4RCClass()  : TargetRegisterClass(F4RCRegClassID, F4RCVTs, F4RCSubclasses, F4RCSuperclasses, 4, 4, 1, F4RC, F4RC + 32) {}

F8RCClass::F8RCClass()  : TargetRegisterClass(F8RCRegClassID, F8RCVTs, F8RCSubclasses, F8RCSuperclasses, 8, 8, 1, F8RC, F8RC + 32) {}

    G8RCClass::iterator
    G8RCClass::allocation_order_begin(const MachineFunction &MF) const {
      return begin();
    }
    G8RCClass::iterator
    G8RCClass::allocation_order_end(const MachineFunction &MF) const {
      if (needsFP(MF))
        return end()-5;
      else
        return end()-4;
    }
  
G8RCClass::G8RCClass()  : TargetRegisterClass(G8RCRegClassID, G8RCVTs, G8RCSubclasses, G8RCSuperclasses, 8, 8, 1, G8RC, G8RC + 33) {}

    GPRCClass::iterator
    GPRCClass::allocation_order_begin(const MachineFunction &MF) const {
      // In Linux, r2 is reserved for the OS.
      if (!MF.getTarget().getSubtarget<PPCSubtarget>().isDarwin())
        return begin()+1;

      return begin();
    }
    GPRCClass::iterator
    GPRCClass::allocation_order_end(const MachineFunction &MF) const {
      // On PPC64, r13 is the thread pointer.  Never allocate this register.
      // Note that this is overconservative, as it also prevents allocation of
      // R31 when the FP is not needed.
      if (MF.getTarget().getSubtarget<PPCSubtarget>().isPPC64())
        return end()-5;  // don't allocate R13, R31, R0, R1, LR
        
      if (needsFP(MF))
        return end()-4;  // don't allocate R31, R0, R1, LR
      else
        return end()-3;  // don't allocate R0, R1, LR
    }
  
GPRCClass::GPRCClass()  : TargetRegisterClass(GPRCRegClassID, GPRCVTs, GPRCSubclasses, GPRCSuperclasses, 4, 4, 1, GPRC, GPRC + 33) {}

VRRCClass::VRRCClass()  : TargetRegisterClass(VRRCRegClassID, VRRCVTs, VRRCSubclasses, VRRCSuperclasses, 16, 16, 1, VRRC, VRRC + 32) {}
}

namespace {
  const TargetRegisterClass* const RegisterClasses[] = {
    &PPC::CRBITRCRegClass,
    &PPC::CRRCRegClass,
    &PPC::CTRRCRegClass,
    &PPC::CTRRC8RegClass,
    &PPC::F4RCRegClass,
    &PPC::F8RCRegClass,
    &PPC::G8RCRegClass,
    &PPC::GPRCRegClass,
    &PPC::VRRCRegClass,
  };


  // Number of hash collisions: 0
  const unsigned SubregHashTable[] = { PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X17, PPC::R17, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X23, PPC::R23, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X3, PPC::R3, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X11, PPC::R11, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X8, PPC::R8, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X18, PPC::R18, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X24, PPC::R24, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X30, PPC::R30, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X12, PPC::R12, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X9, PPC::R9, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X19, PPC::R19, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X25, PPC::R25, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X31, PPC::R31, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X13, PPC::R13, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X2, PPC::R2, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X26, PPC::R26, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X4, PPC::R4, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X14, PPC::R14, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X20, PPC::R20, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X27, PPC::R27, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X0, PPC::R0, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X5, PPC::R5, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X15, PPC::R15, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X21, PPC::R21, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X28, PPC::R28, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X1, PPC::R1, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X6, PPC::R6, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X16, PPC::R16, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X22, PPC::R22, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X29, PPC::R29, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X10, PPC::R10, 
                                       PPC::NoRegister, PPC::NoRegister, 
                                       PPC::X7, PPC::R7, 
PPC::NoRegister, PPC::NoRegister };
  const unsigned SubregHashTableSize = 256;


  // Register Alias Sets...
  const unsigned Empty_AliasSet[] = { 0 };
  const unsigned R0_AliasSet[] = { PPC::X0, 0 };
  const unsigned R1_AliasSet[] = { PPC::X1, 0 };
  const unsigned R10_AliasSet[] = { PPC::X10, 0 };
  const unsigned R11_AliasSet[] = { PPC::X11, 0 };
  const unsigned R12_AliasSet[] = { PPC::X12, 0 };
  const unsigned R13_AliasSet[] = { PPC::X13, 0 };
  const unsigned R14_AliasSet[] = { PPC::X14, 0 };
  const unsigned R15_AliasSet[] = { PPC::X15, 0 };
  const unsigned R16_AliasSet[] = { PPC::X16, 0 };
  const unsigned R17_AliasSet[] = { PPC::X17, 0 };
  const unsigned R18_AliasSet[] = { PPC::X18, 0 };
  const unsigned R19_AliasSet[] = { PPC::X19, 0 };
  const unsigned R2_AliasSet[] = { PPC::X2, 0 };
  const unsigned R20_AliasSet[] = { PPC::X20, 0 };
  const unsigned R21_AliasSet[] = { PPC::X21, 0 };
  const unsigned R22_AliasSet[] = { PPC::X22, 0 };
  const unsigned R23_AliasSet[] = { PPC::X23, 0 };
  const unsigned R24_AliasSet[] = { PPC::X24, 0 };
  const unsigned R25_AliasSet[] = { PPC::X25, 0 };
  const unsigned R26_AliasSet[] = { PPC::X26, 0 };
  const unsigned R27_AliasSet[] = { PPC::X27, 0 };
  const unsigned R28_AliasSet[] = { PPC::X28, 0 };
  const unsigned R29_AliasSet[] = { PPC::X29, 0 };
  const unsigned R3_AliasSet[] = { PPC::X3, 0 };
  const unsigned R30_AliasSet[] = { PPC::X30, 0 };
  const unsigned R31_AliasSet[] = { PPC::X31, 0 };
  const unsigned R4_AliasSet[] = { PPC::X4, 0 };
  const unsigned R5_AliasSet[] = { PPC::X5, 0 };
  const unsigned R6_AliasSet[] = { PPC::X6, 0 };
  const unsigned R7_AliasSet[] = { PPC::X7, 0 };
  const unsigned R8_AliasSet[] = { PPC::X8, 0 };
  const unsigned R9_AliasSet[] = { PPC::X9, 0 };
  const unsigned X0_AliasSet[] = { PPC::R0, 0 };
  const unsigned X1_AliasSet[] = { PPC::R1, 0 };
  const unsigned X10_AliasSet[] = { PPC::R10, 0 };
  const unsigned X11_AliasSet[] = { PPC::R11, 0 };
  const unsigned X12_AliasSet[] = { PPC::R12, 0 };
  const unsigned X13_AliasSet[] = { PPC::R13, 0 };
  const unsigned X14_AliasSet[] = { PPC::R14, 0 };
  const unsigned X15_AliasSet[] = { PPC::R15, 0 };
  const unsigned X16_AliasSet[] = { PPC::R16, 0 };
  const unsigned X17_AliasSet[] = { PPC::R17, 0 };
  const unsigned X18_AliasSet[] = { PPC::R18, 0 };
  const unsigned X19_AliasSet[] = { PPC::R19, 0 };
  const unsigned X2_AliasSet[] = { PPC::R2, 0 };
  const unsigned X20_AliasSet[] = { PPC::R20, 0 };
  const unsigned X21_AliasSet[] = { PPC::R21, 0 };
  const unsigned X22_AliasSet[] = { PPC::R22, 0 };
  const unsigned X23_AliasSet[] = { PPC::R23, 0 };
  const unsigned X24_AliasSet[] = { PPC::R24, 0 };
  const unsigned X25_AliasSet[] = { PPC::R25, 0 };
  const unsigned X26_AliasSet[] = { PPC::R26, 0 };
  const unsigned X27_AliasSet[] = { PPC::R27, 0 };
  const unsigned X28_AliasSet[] = { PPC::R28, 0 };
  const unsigned X29_AliasSet[] = { PPC::R29, 0 };
  const unsigned X3_AliasSet[] = { PPC::R3, 0 };
  const unsigned X30_AliasSet[] = { PPC::R30, 0 };
  const unsigned X31_AliasSet[] = { PPC::R31, 0 };
  const unsigned X4_AliasSet[] = { PPC::R4, 0 };
  const unsigned X5_AliasSet[] = { PPC::R5, 0 };
  const unsigned X6_AliasSet[] = { PPC::R6, 0 };
  const unsigned X7_AliasSet[] = { PPC::R7, 0 };
  const unsigned X8_AliasSet[] = { PPC::R8, 0 };
  const unsigned X9_AliasSet[] = { PPC::R9, 0 };


  // Register Sub-registers Sets...
  const unsigned Empty_SubRegsSet[] = { 0 };
  const unsigned CR0_SubRegsSet[] = { 0 };
  const unsigned CR0EQ_SubRegsSet[] = { 0 };
  const unsigned CR0GT_SubRegsSet[] = { 0 };
  const unsigned CR0LT_SubRegsSet[] = { 0 };
  const unsigned CR0UN_SubRegsSet[] = { 0 };
  const unsigned CR1_SubRegsSet[] = { 0 };
  const unsigned CR1EQ_SubRegsSet[] = { 0 };
  const unsigned CR1GT_SubRegsSet[] = { 0 };
  const unsigned CR1LT_SubRegsSet[] = { 0 };
  const unsigned CR1UN_SubRegsSet[] = { 0 };
  const unsigned CR2_SubRegsSet[] = { 0 };
  const unsigned CR2EQ_SubRegsSet[] = { 0 };
  const unsigned CR2GT_SubRegsSet[] = { 0 };
  const unsigned CR2LT_SubRegsSet[] = { 0 };
  const unsigned CR2UN_SubRegsSet[] = { 0 };
  const unsigned CR3_SubRegsSet[] = { 0 };
  const unsigned CR3EQ_SubRegsSet[] = { 0 };
  const unsigned CR3GT_SubRegsSet[] = { 0 };
  const unsigned CR3LT_SubRegsSet[] = { 0 };
  const unsigned CR3UN_SubRegsSet[] = { 0 };
  const unsigned CR4_SubRegsSet[] = { 0 };
  const unsigned CR4EQ_SubRegsSet[] = { 0 };
  const unsigned CR4GT_SubRegsSet[] = { 0 };
  const unsigned CR4LT_SubRegsSet[] = { 0 };
  const unsigned CR4UN_SubRegsSet[] = { 0 };
  const unsigned CR5_SubRegsSet[] = { 0 };
  const unsigned CR5EQ_SubRegsSet[] = { 0 };
  const unsigned CR5GT_SubRegsSet[] = { 0 };
  const unsigned CR5LT_SubRegsSet[] = { 0 };
  const unsigned CR5UN_SubRegsSet[] = { 0 };
  const unsigned CR6_SubRegsSet[] = { 0 };
  const unsigned CR6EQ_SubRegsSet[] = { 0 };
  const unsigned CR6GT_SubRegsSet[] = { 0 };
  const unsigned CR6LT_SubRegsSet[] = { 0 };
  const unsigned CR6UN_SubRegsSet[] = { 0 };
  const unsigned CR7_SubRegsSet[] = { 0 };
  const unsigned CR7EQ_SubRegsSet[] = { 0 };
  const unsigned CR7GT_SubRegsSet[] = { 0 };
  const unsigned CR7LT_SubRegsSet[] = { 0 };
  const unsigned CR7UN_SubRegsSet[] = { 0 };
  const unsigned CTR_SubRegsSet[] = { 0 };
  const unsigned CTR8_SubRegsSet[] = { 0 };
  const unsigned F0_SubRegsSet[] = { 0 };
  const unsigned F1_SubRegsSet[] = { 0 };
  const unsigned F10_SubRegsSet[] = { 0 };
  const unsigned F11_SubRegsSet[] = { 0 };
  const unsigned F12_SubRegsSet[] = { 0 };
  const unsigned F13_SubRegsSet[] = { 0 };
  const unsigned F14_SubRegsSet[] = { 0 };
  const unsigned F15_SubRegsSet[] = { 0 };
  const unsigned F16_SubRegsSet[] = { 0 };
  const unsigned F17_SubRegsSet[] = { 0 };
  const unsigned F18_SubRegsSet[] = { 0 };
  const unsigned F19_SubRegsSet[] = { 0 };
  const unsigned F2_SubRegsSet[] = { 0 };
  const unsigned F20_SubRegsSet[] = { 0 };
  const unsigned F21_SubRegsSet[] = { 0 };
  const unsigned F22_SubRegsSet[] = { 0 };
  const unsigned F23_SubRegsSet[] = { 0 };
  const unsigned F24_SubRegsSet[] = { 0 };
  const unsigned F25_SubRegsSet[] = { 0 };
  const unsigned F26_SubRegsSet[] = { 0 };
  const unsigned F27_SubRegsSet[] = { 0 };
  const unsigned F28_SubRegsSet[] = { 0 };
  const unsigned F29_SubRegsSet[] = { 0 };
  const unsigned F3_SubRegsSet[] = { 0 };
  const unsigned F30_SubRegsSet[] = { 0 };
  const unsigned F31_SubRegsSet[] = { 0 };
  const unsigned F4_SubRegsSet[] = { 0 };
  const unsigned F5_SubRegsSet[] = { 0 };
  const unsigned F6_SubRegsSet[] = { 0 };
  const unsigned F7_SubRegsSet[] = { 0 };
  const unsigned F8_SubRegsSet[] = { 0 };
  const unsigned F9_SubRegsSet[] = { 0 };
  const unsigned LR_SubRegsSet[] = { 0 };
  const unsigned LR8_SubRegsSet[] = { 0 };
  const unsigned R0_SubRegsSet[] = { 0 };
  const unsigned R1_SubRegsSet[] = { 0 };
  const unsigned R10_SubRegsSet[] = { 0 };
  const unsigned R11_SubRegsSet[] = { 0 };
  const unsigned R12_SubRegsSet[] = { 0 };
  const unsigned R13_SubRegsSet[] = { 0 };
  const unsigned R14_SubRegsSet[] = { 0 };
  const unsigned R15_SubRegsSet[] = { 0 };
  const unsigned R16_SubRegsSet[] = { 0 };
  const unsigned R17_SubRegsSet[] = { 0 };
  const unsigned R18_SubRegsSet[] = { 0 };
  const unsigned R19_SubRegsSet[] = { 0 };
  const unsigned R2_SubRegsSet[] = { 0 };
  const unsigned R20_SubRegsSet[] = { 0 };
  const unsigned R21_SubRegsSet[] = { 0 };
  const unsigned R22_SubRegsSet[] = { 0 };
  const unsigned R23_SubRegsSet[] = { 0 };
  const unsigned R24_SubRegsSet[] = { 0 };
  const unsigned R25_SubRegsSet[] = { 0 };
  const unsigned R26_SubRegsSet[] = { 0 };
  const unsigned R27_SubRegsSet[] = { 0 };
  const unsigned R28_SubRegsSet[] = { 0 };
  const unsigned R29_SubRegsSet[] = { 0 };
  const unsigned R3_SubRegsSet[] = { 0 };
  const unsigned R30_SubRegsSet[] = { 0 };
  const unsigned R31_SubRegsSet[] = { 0 };
  const unsigned R4_SubRegsSet[] = { 0 };
  const unsigned R5_SubRegsSet[] = { 0 };
  const unsigned R6_SubRegsSet[] = { 0 };
  const unsigned R7_SubRegsSet[] = { 0 };
  const unsigned R8_SubRegsSet[] = { 0 };
  const unsigned R9_SubRegsSet[] = { 0 };
  const unsigned RM_SubRegsSet[] = { 0 };
  const unsigned V0_SubRegsSet[] = { 0 };
  const unsigned V1_SubRegsSet[] = { 0 };
  const unsigned V10_SubRegsSet[] = { 0 };
  const unsigned V11_SubRegsSet[] = { 0 };
  const unsigned V12_SubRegsSet[] = { 0 };
  const unsigned V13_SubRegsSet[] = { 0 };
  const unsigned V14_SubRegsSet[] = { 0 };
  const unsigned V15_SubRegsSet[] = { 0 };
  const unsigned V16_SubRegsSet[] = { 0 };
  const unsigned V17_SubRegsSet[] = { 0 };
  const unsigned V18_SubRegsSet[] = { 0 };
  const unsigned V19_SubRegsSet[] = { 0 };
  const unsigned V2_SubRegsSet[] = { 0 };
  const unsigned V20_SubRegsSet[] = { 0 };
  const unsigned V21_SubRegsSet[] = { 0 };
  const unsigned V22_SubRegsSet[] = { 0 };
  const unsigned V23_SubRegsSet[] = { 0 };
  const unsigned V24_SubRegsSet[] = { 0 };
  const unsigned V25_SubRegsSet[] = { 0 };
  const unsigned V26_SubRegsSet[] = { 0 };
  const unsigned V27_SubRegsSet[] = { 0 };
  const unsigned V28_SubRegsSet[] = { 0 };
  const unsigned V29_SubRegsSet[] = { 0 };
  const unsigned V3_SubRegsSet[] = { 0 };
  const unsigned V30_SubRegsSet[] = { 0 };
  const unsigned V31_SubRegsSet[] = { 0 };
  const unsigned V4_SubRegsSet[] = { 0 };
  const unsigned V5_SubRegsSet[] = { 0 };
  const unsigned V6_SubRegsSet[] = { 0 };
  const unsigned V7_SubRegsSet[] = { 0 };
  const unsigned V8_SubRegsSet[] = { 0 };
  const unsigned V9_SubRegsSet[] = { 0 };
  const unsigned VRSAVE_SubRegsSet[] = { 0 };
  const unsigned X0_SubRegsSet[] = { PPC::R0, 0 };
  const unsigned X1_SubRegsSet[] = { PPC::R1, 0 };
  const unsigned X10_SubRegsSet[] = { PPC::R10, 0 };
  const unsigned X11_SubRegsSet[] = { PPC::R11, 0 };
  const unsigned X12_SubRegsSet[] = { PPC::R12, 0 };
  const unsigned X13_SubRegsSet[] = { PPC::R13, 0 };
  const unsigned X14_SubRegsSet[] = { PPC::R14, 0 };
  const unsigned X15_SubRegsSet[] = { PPC::R15, 0 };
  const unsigned X16_SubRegsSet[] = { PPC::R16, 0 };
  const unsigned X17_SubRegsSet[] = { PPC::R17, 0 };
  const unsigned X18_SubRegsSet[] = { PPC::R18, 0 };
  const unsigned X19_SubRegsSet[] = { PPC::R19, 0 };
  const unsigned X2_SubRegsSet[] = { PPC::R2, 0 };
  const unsigned X20_SubRegsSet[] = { PPC::R20, 0 };
  const unsigned X21_SubRegsSet[] = { PPC::R21, 0 };
  const unsigned X22_SubRegsSet[] = { PPC::R22, 0 };
  const unsigned X23_SubRegsSet[] = { PPC::R23, 0 };
  const unsigned X24_SubRegsSet[] = { PPC::R24, 0 };
  const unsigned X25_SubRegsSet[] = { PPC::R25, 0 };
  const unsigned X26_SubRegsSet[] = { PPC::R26, 0 };
  const unsigned X27_SubRegsSet[] = { PPC::R27, 0 };
  const unsigned X28_SubRegsSet[] = { PPC::R28, 0 };
  const unsigned X29_SubRegsSet[] = { PPC::R29, 0 };
  const unsigned X3_SubRegsSet[] = { PPC::R3, 0 };
  const unsigned X30_SubRegsSet[] = { PPC::R30, 0 };
  const unsigned X31_SubRegsSet[] = { PPC::R31, 0 };
  const unsigned X4_SubRegsSet[] = { PPC::R4, 0 };
  const unsigned X5_SubRegsSet[] = { PPC::R5, 0 };
  const unsigned X6_SubRegsSet[] = { PPC::R6, 0 };
  const unsigned X7_SubRegsSet[] = { PPC::R7, 0 };
  const unsigned X8_SubRegsSet[] = { PPC::R8, 0 };
  const unsigned X9_SubRegsSet[] = { PPC::R9, 0 };


  // Register Super-registers Sets...
  const unsigned Empty_SuperRegsSet[] = { 0 };
  const unsigned R0_SuperRegsSet[] = { PPC::X0, 0 };
  const unsigned R1_SuperRegsSet[] = { PPC::X1, 0 };
  const unsigned R10_SuperRegsSet[] = { PPC::X10, 0 };
  const unsigned R11_SuperRegsSet[] = { PPC::X11, 0 };
  const unsigned R12_SuperRegsSet[] = { PPC::X12, 0 };
  const unsigned R13_SuperRegsSet[] = { PPC::X13, 0 };
  const unsigned R14_SuperRegsSet[] = { PPC::X14, 0 };
  const unsigned R15_SuperRegsSet[] = { PPC::X15, 0 };
  const unsigned R16_SuperRegsSet[] = { PPC::X16, 0 };
  const unsigned R17_SuperRegsSet[] = { PPC::X17, 0 };
  const unsigned R18_SuperRegsSet[] = { PPC::X18, 0 };
  const unsigned R19_SuperRegsSet[] = { PPC::X19, 0 };
  const unsigned R2_SuperRegsSet[] = { PPC::X2, 0 };
  const unsigned R20_SuperRegsSet[] = { PPC::X20, 0 };
  const unsigned R21_SuperRegsSet[] = { PPC::X21, 0 };
  const unsigned R22_SuperRegsSet[] = { PPC::X22, 0 };
  const unsigned R23_SuperRegsSet[] = { PPC::X23, 0 };
  const unsigned R24_SuperRegsSet[] = { PPC::X24, 0 };
  const unsigned R25_SuperRegsSet[] = { PPC::X25, 0 };
  const unsigned R26_SuperRegsSet[] = { PPC::X26, 0 };
  const unsigned R27_SuperRegsSet[] = { PPC::X27, 0 };
  const unsigned R28_SuperRegsSet[] = { PPC::X28, 0 };
  const unsigned R29_SuperRegsSet[] = { PPC::X29, 0 };
  const unsigned R3_SuperRegsSet[] = { PPC::X3, 0 };
  const unsigned R30_SuperRegsSet[] = { PPC::X30, 0 };
  const unsigned R31_SuperRegsSet[] = { PPC::X31, 0 };
  const unsigned R4_SuperRegsSet[] = { PPC::X4, 0 };
  const unsigned R5_SuperRegsSet[] = { PPC::X5, 0 };
  const unsigned R6_SuperRegsSet[] = { PPC::X6, 0 };
  const unsigned R7_SuperRegsSet[] = { PPC::X7, 0 };
  const unsigned R8_SuperRegsSet[] = { PPC::X8, 0 };
  const unsigned R9_SuperRegsSet[] = { PPC::X9, 0 };

  const TargetRegisterDesc RegisterDescriptors[] = { // Descriptors
    { "NOREG",	"NOREG",	0,	0,	0 },
    { "cr0",	"CR0",	Empty_AliasSet,	CR0_SubRegsSet,	Empty_SuperRegsSet },
    { "2",	"CR0EQ",	Empty_AliasSet,	CR0EQ_SubRegsSet,	Empty_SuperRegsSet },
    { "1",	"CR0GT",	Empty_AliasSet,	CR0GT_SubRegsSet,	Empty_SuperRegsSet },
    { "0",	"CR0LT",	Empty_AliasSet,	CR0LT_SubRegsSet,	Empty_SuperRegsSet },
    { "3",	"CR0UN",	Empty_AliasSet,	CR0UN_SubRegsSet,	Empty_SuperRegsSet },
    { "cr1",	"CR1",	Empty_AliasSet,	CR1_SubRegsSet,	Empty_SuperRegsSet },
    { "6",	"CR1EQ",	Empty_AliasSet,	CR1EQ_SubRegsSet,	Empty_SuperRegsSet },
    { "5",	"CR1GT",	Empty_AliasSet,	CR1GT_SubRegsSet,	Empty_SuperRegsSet },
    { "4",	"CR1LT",	Empty_AliasSet,	CR1LT_SubRegsSet,	Empty_SuperRegsSet },
    { "7",	"CR1UN",	Empty_AliasSet,	CR1UN_SubRegsSet,	Empty_SuperRegsSet },
    { "cr2",	"CR2",	Empty_AliasSet,	CR2_SubRegsSet,	Empty_SuperRegsSet },
    { "10",	"CR2EQ",	Empty_AliasSet,	CR2EQ_SubRegsSet,	Empty_SuperRegsSet },
    { "9",	"CR2GT",	Empty_AliasSet,	CR2GT_SubRegsSet,	Empty_SuperRegsSet },
    { "8",	"CR2LT",	Empty_AliasSet,	CR2LT_SubRegsSet,	Empty_SuperRegsSet },
    { "11",	"CR2UN",	Empty_AliasSet,	CR2UN_SubRegsSet,	Empty_SuperRegsSet },
    { "cr3",	"CR3",	Empty_AliasSet,	CR3_SubRegsSet,	Empty_SuperRegsSet },
    { "14",	"CR3EQ",	Empty_AliasSet,	CR3EQ_SubRegsSet,	Empty_SuperRegsSet },
    { "13",	"CR3GT",	Empty_AliasSet,	CR3GT_SubRegsSet,	Empty_SuperRegsSet },
    { "12",	"CR3LT",	Empty_AliasSet,	CR3LT_SubRegsSet,	Empty_SuperRegsSet },
    { "15",	"CR3UN",	Empty_AliasSet,	CR3UN_SubRegsSet,	Empty_SuperRegsSet },
    { "cr4",	"CR4",	Empty_AliasSet,	CR4_SubRegsSet,	Empty_SuperRegsSet },
    { "18",	"CR4EQ",	Empty_AliasSet,	CR4EQ_SubRegsSet,	Empty_SuperRegsSet },
    { "17",	"CR4GT",	Empty_AliasSet,	CR4GT_SubRegsSet,	Empty_SuperRegsSet },
    { "16",	"CR4LT",	Empty_AliasSet,	CR4LT_SubRegsSet,	Empty_SuperRegsSet },
    { "19",	"CR4UN",	Empty_AliasSet,	CR4UN_SubRegsSet,	Empty_SuperRegsSet },
    { "cr5",	"CR5",	Empty_AliasSet,	CR5_SubRegsSet,	Empty_SuperRegsSet },
    { "22",	"CR5EQ",	Empty_AliasSet,	CR5EQ_SubRegsSet,	Empty_SuperRegsSet },
    { "21",	"CR5GT",	Empty_AliasSet,	CR5GT_SubRegsSet,	Empty_SuperRegsSet },
    { "20",	"CR5LT",	Empty_AliasSet,	CR5LT_SubRegsSet,	Empty_SuperRegsSet },
    { "23",	"CR5UN",	Empty_AliasSet,	CR5UN_SubRegsSet,	Empty_SuperRegsSet },
    { "cr6",	"CR6",	Empty_AliasSet,	CR6_SubRegsSet,	Empty_SuperRegsSet },
    { "26",	"CR6EQ",	Empty_AliasSet,	CR6EQ_SubRegsSet,	Empty_SuperRegsSet },
    { "25",	"CR6GT",	Empty_AliasSet,	CR6GT_SubRegsSet,	Empty_SuperRegsSet },
    { "24",	"CR6LT",	Empty_AliasSet,	CR6LT_SubRegsSet,	Empty_SuperRegsSet },
    { "27",	"CR6UN",	Empty_AliasSet,	CR6UN_SubRegsSet,	Empty_SuperRegsSet },
    { "cr7",	"CR7",	Empty_AliasSet,	CR7_SubRegsSet,	Empty_SuperRegsSet },
    { "30",	"CR7EQ",	Empty_AliasSet,	CR7EQ_SubRegsSet,	Empty_SuperRegsSet },
    { "29",	"CR7GT",	Empty_AliasSet,	CR7GT_SubRegsSet,	Empty_SuperRegsSet },
    { "28",	"CR7LT",	Empty_AliasSet,	CR7LT_SubRegsSet,	Empty_SuperRegsSet },
    { "31",	"CR7UN",	Empty_AliasSet,	CR7UN_SubRegsSet,	Empty_SuperRegsSet },
    { "ctr",	"CTR",	Empty_AliasSet,	CTR_SubRegsSet,	Empty_SuperRegsSet },
    { "ctr",	"CTR8",	Empty_AliasSet,	CTR8_SubRegsSet,	Empty_SuperRegsSet },
    { "f0",	"F0",	Empty_AliasSet,	F0_SubRegsSet,	Empty_SuperRegsSet },
    { "f1",	"F1",	Empty_AliasSet,	F1_SubRegsSet,	Empty_SuperRegsSet },
    { "f10",	"F10",	Empty_AliasSet,	F10_SubRegsSet,	Empty_SuperRegsSet },
    { "f11",	"F11",	Empty_AliasSet,	F11_SubRegsSet,	Empty_SuperRegsSet },
    { "f12",	"F12",	Empty_AliasSet,	F12_SubRegsSet,	Empty_SuperRegsSet },
    { "f13",	"F13",	Empty_AliasSet,	F13_SubRegsSet,	Empty_SuperRegsSet },
    { "f14",	"F14",	Empty_AliasSet,	F14_SubRegsSet,	Empty_SuperRegsSet },
    { "f15",	"F15",	Empty_AliasSet,	F15_SubRegsSet,	Empty_SuperRegsSet },
    { "f16",	"F16",	Empty_AliasSet,	F16_SubRegsSet,	Empty_SuperRegsSet },
    { "f17",	"F17",	Empty_AliasSet,	F17_SubRegsSet,	Empty_SuperRegsSet },
    { "f18",	"F18",	Empty_AliasSet,	F18_SubRegsSet,	Empty_SuperRegsSet },
    { "f19",	"F19",	Empty_AliasSet,	F19_SubRegsSet,	Empty_SuperRegsSet },
    { "f2",	"F2",	Empty_AliasSet,	F2_SubRegsSet,	Empty_SuperRegsSet },
    { "f20",	"F20",	Empty_AliasSet,	F20_SubRegsSet,	Empty_SuperRegsSet },
    { "f21",	"F21",	Empty_AliasSet,	F21_SubRegsSet,	Empty_SuperRegsSet },
    { "f22",	"F22",	Empty_AliasSet,	F22_SubRegsSet,	Empty_SuperRegsSet },
    { "f23",	"F23",	Empty_AliasSet,	F23_SubRegsSet,	Empty_SuperRegsSet },
    { "f24",	"F24",	Empty_AliasSet,	F24_SubRegsSet,	Empty_SuperRegsSet },
    { "f25",	"F25",	Empty_AliasSet,	F25_SubRegsSet,	Empty_SuperRegsSet },
    { "f26",	"F26",	Empty_AliasSet,	F26_SubRegsSet,	Empty_SuperRegsSet },
    { "f27",	"F27",	Empty_AliasSet,	F27_SubRegsSet,	Empty_SuperRegsSet },
    { "f28",	"F28",	Empty_AliasSet,	F28_SubRegsSet,	Empty_SuperRegsSet },
    { "f29",	"F29",	Empty_AliasSet,	F29_SubRegsSet,	Empty_SuperRegsSet },
    { "f3",	"F3",	Empty_AliasSet,	F3_SubRegsSet,	Empty_SuperRegsSet },
    { "f30",	"F30",	Empty_AliasSet,	F30_SubRegsSet,	Empty_SuperRegsSet },
    { "f31",	"F31",	Empty_AliasSet,	F31_SubRegsSet,	Empty_SuperRegsSet },
    { "f4",	"F4",	Empty_AliasSet,	F4_SubRegsSet,	Empty_SuperRegsSet },
    { "f5",	"F5",	Empty_AliasSet,	F5_SubRegsSet,	Empty_SuperRegsSet },
    { "f6",	"F6",	Empty_AliasSet,	F6_SubRegsSet,	Empty_SuperRegsSet },
    { "f7",	"F7",	Empty_AliasSet,	F7_SubRegsSet,	Empty_SuperRegsSet },
    { "f8",	"F8",	Empty_AliasSet,	F8_SubRegsSet,	Empty_SuperRegsSet },
    { "f9",	"F9",	Empty_AliasSet,	F9_SubRegsSet,	Empty_SuperRegsSet },
    { "lr",	"LR",	Empty_AliasSet,	LR_SubRegsSet,	Empty_SuperRegsSet },
    { "lr",	"LR8",	Empty_AliasSet,	LR8_SubRegsSet,	Empty_SuperRegsSet },
    { "r0",	"R0",	R0_AliasSet,	R0_SubRegsSet,	R0_SuperRegsSet },
    { "r1",	"R1",	R1_AliasSet,	R1_SubRegsSet,	R1_SuperRegsSet },
    { "r10",	"R10",	R10_AliasSet,	R10_SubRegsSet,	R10_SuperRegsSet },
    { "r11",	"R11",	R11_AliasSet,	R11_SubRegsSet,	R11_SuperRegsSet },
    { "r12",	"R12",	R12_AliasSet,	R12_SubRegsSet,	R12_SuperRegsSet },
    { "r13",	"R13",	R13_AliasSet,	R13_SubRegsSet,	R13_SuperRegsSet },
    { "r14",	"R14",	R14_AliasSet,	R14_SubRegsSet,	R14_SuperRegsSet },
    { "r15",	"R15",	R15_AliasSet,	R15_SubRegsSet,	R15_SuperRegsSet },
    { "r16",	"R16",	R16_AliasSet,	R16_SubRegsSet,	R16_SuperRegsSet },
    { "r17",	"R17",	R17_AliasSet,	R17_SubRegsSet,	R17_SuperRegsSet },
    { "r18",	"R18",	R18_AliasSet,	R18_SubRegsSet,	R18_SuperRegsSet },
    { "r19",	"R19",	R19_AliasSet,	R19_SubRegsSet,	R19_SuperRegsSet },
    { "r2",	"R2",	R2_AliasSet,	R2_SubRegsSet,	R2_SuperRegsSet },
    { "r20",	"R20",	R20_AliasSet,	R20_SubRegsSet,	R20_SuperRegsSet },
    { "r21",	"R21",	R21_AliasSet,	R21_SubRegsSet,	R21_SuperRegsSet },
    { "r22",	"R22",	R22_AliasSet,	R22_SubRegsSet,	R22_SuperRegsSet },
    { "r23",	"R23",	R23_AliasSet,	R23_SubRegsSet,	R23_SuperRegsSet },
    { "r24",	"R24",	R24_AliasSet,	R24_SubRegsSet,	R24_SuperRegsSet },
    { "r25",	"R25",	R25_AliasSet,	R25_SubRegsSet,	R25_SuperRegsSet },
    { "r26",	"R26",	R26_AliasSet,	R26_SubRegsSet,	R26_SuperRegsSet },
    { "r27",	"R27",	R27_AliasSet,	R27_SubRegsSet,	R27_SuperRegsSet },
    { "r28",	"R28",	R28_AliasSet,	R28_SubRegsSet,	R28_SuperRegsSet },
    { "r29",	"R29",	R29_AliasSet,	R29_SubRegsSet,	R29_SuperRegsSet },
    { "r3",	"R3",	R3_AliasSet,	R3_SubRegsSet,	R3_SuperRegsSet },
    { "r30",	"R30",	R30_AliasSet,	R30_SubRegsSet,	R30_SuperRegsSet },
    { "r31",	"R31",	R31_AliasSet,	R31_SubRegsSet,	R31_SuperRegsSet },
    { "r4",	"R4",	R4_AliasSet,	R4_SubRegsSet,	R4_SuperRegsSet },
    { "r5",	"R5",	R5_AliasSet,	R5_SubRegsSet,	R5_SuperRegsSet },
    { "r6",	"R6",	R6_AliasSet,	R6_SubRegsSet,	R6_SuperRegsSet },
    { "r7",	"R7",	R7_AliasSet,	R7_SubRegsSet,	R7_SuperRegsSet },
    { "r8",	"R8",	R8_AliasSet,	R8_SubRegsSet,	R8_SuperRegsSet },
    { "r9",	"R9",	R9_AliasSet,	R9_SubRegsSet,	R9_SuperRegsSet },
    { "**ROUNDING MODE**",	"RM",	Empty_AliasSet,	RM_SubRegsSet,	Empty_SuperRegsSet },
    { "v0",	"V0",	Empty_AliasSet,	V0_SubRegsSet,	Empty_SuperRegsSet },
    { "v1",	"V1",	Empty_AliasSet,	V1_SubRegsSet,	Empty_SuperRegsSet },
    { "v10",	"V10",	Empty_AliasSet,	V10_SubRegsSet,	Empty_SuperRegsSet },
    { "v11",	"V11",	Empty_AliasSet,	V11_SubRegsSet,	Empty_SuperRegsSet },
    { "v12",	"V12",	Empty_AliasSet,	V12_SubRegsSet,	Empty_SuperRegsSet },
    { "v13",	"V13",	Empty_AliasSet,	V13_SubRegsSet,	Empty_SuperRegsSet },
    { "v14",	"V14",	Empty_AliasSet,	V14_SubRegsSet,	Empty_SuperRegsSet },
    { "v15",	"V15",	Empty_AliasSet,	V15_SubRegsSet,	Empty_SuperRegsSet },
    { "v16",	"V16",	Empty_AliasSet,	V16_SubRegsSet,	Empty_SuperRegsSet },
    { "v17",	"V17",	Empty_AliasSet,	V17_SubRegsSet,	Empty_SuperRegsSet },
    { "v18",	"V18",	Empty_AliasSet,	V18_SubRegsSet,	Empty_SuperRegsSet },
    { "v19",	"V19",	Empty_AliasSet,	V19_SubRegsSet,	Empty_SuperRegsSet },
    { "v2",	"V2",	Empty_AliasSet,	V2_SubRegsSet,	Empty_SuperRegsSet },
    { "v20",	"V20",	Empty_AliasSet,	V20_SubRegsSet,	Empty_SuperRegsSet },
    { "v21",	"V21",	Empty_AliasSet,	V21_SubRegsSet,	Empty_SuperRegsSet },
    { "v22",	"V22",	Empty_AliasSet,	V22_SubRegsSet,	Empty_SuperRegsSet },
    { "v23",	"V23",	Empty_AliasSet,	V23_SubRegsSet,	Empty_SuperRegsSet },
    { "v24",	"V24",	Empty_AliasSet,	V24_SubRegsSet,	Empty_SuperRegsSet },
    { "v25",	"V25",	Empty_AliasSet,	V25_SubRegsSet,	Empty_SuperRegsSet },
    { "v26",	"V26",	Empty_AliasSet,	V26_SubRegsSet,	Empty_SuperRegsSet },
    { "v27",	"V27",	Empty_AliasSet,	V27_SubRegsSet,	Empty_SuperRegsSet },
    { "v28",	"V28",	Empty_AliasSet,	V28_SubRegsSet,	Empty_SuperRegsSet },
    { "v29",	"V29",	Empty_AliasSet,	V29_SubRegsSet,	Empty_SuperRegsSet },
    { "v3",	"V3",	Empty_AliasSet,	V3_SubRegsSet,	Empty_SuperRegsSet },
    { "v30",	"V30",	Empty_AliasSet,	V30_SubRegsSet,	Empty_SuperRegsSet },
    { "v31",	"V31",	Empty_AliasSet,	V31_SubRegsSet,	Empty_SuperRegsSet },
    { "v4",	"V4",	Empty_AliasSet,	V4_SubRegsSet,	Empty_SuperRegsSet },
    { "v5",	"V5",	Empty_AliasSet,	V5_SubRegsSet,	Empty_SuperRegsSet },
    { "v6",	"V6",	Empty_AliasSet,	V6_SubRegsSet,	Empty_SuperRegsSet },
    { "v7",	"V7",	Empty_AliasSet,	V7_SubRegsSet,	Empty_SuperRegsSet },
    { "v8",	"V8",	Empty_AliasSet,	V8_SubRegsSet,	Empty_SuperRegsSet },
    { "v9",	"V9",	Empty_AliasSet,	V9_SubRegsSet,	Empty_SuperRegsSet },
    { "VRsave",	"VRSAVE",	Empty_AliasSet,	VRSAVE_SubRegsSet,	Empty_SuperRegsSet },
    { "r0",	"X0",	X0_AliasSet,	X0_SubRegsSet,	Empty_SuperRegsSet },
    { "r1",	"X1",	X1_AliasSet,	X1_SubRegsSet,	Empty_SuperRegsSet },
    { "r10",	"X10",	X10_AliasSet,	X10_SubRegsSet,	Empty_SuperRegsSet },
    { "r11",	"X11",	X11_AliasSet,	X11_SubRegsSet,	Empty_SuperRegsSet },
    { "r12",	"X12",	X12_AliasSet,	X12_SubRegsSet,	Empty_SuperRegsSet },
    { "r13",	"X13",	X13_AliasSet,	X13_SubRegsSet,	Empty_SuperRegsSet },
    { "r14",	"X14",	X14_AliasSet,	X14_SubRegsSet,	Empty_SuperRegsSet },
    { "r15",	"X15",	X15_AliasSet,	X15_SubRegsSet,	Empty_SuperRegsSet },
    { "r16",	"X16",	X16_AliasSet,	X16_SubRegsSet,	Empty_SuperRegsSet },
    { "r17",	"X17",	X17_AliasSet,	X17_SubRegsSet,	Empty_SuperRegsSet },
    { "r18",	"X18",	X18_AliasSet,	X18_SubRegsSet,	Empty_SuperRegsSet },
    { "r19",	"X19",	X19_AliasSet,	X19_SubRegsSet,	Empty_SuperRegsSet },
    { "r2",	"X2",	X2_AliasSet,	X2_SubRegsSet,	Empty_SuperRegsSet },
    { "r20",	"X20",	X20_AliasSet,	X20_SubRegsSet,	Empty_SuperRegsSet },
    { "r21",	"X21",	X21_AliasSet,	X21_SubRegsSet,	Empty_SuperRegsSet },
    { "r22",	"X22",	X22_AliasSet,	X22_SubRegsSet,	Empty_SuperRegsSet },
    { "r23",	"X23",	X23_AliasSet,	X23_SubRegsSet,	Empty_SuperRegsSet },
    { "r24",	"X24",	X24_AliasSet,	X24_SubRegsSet,	Empty_SuperRegsSet },
    { "r25",	"X25",	X25_AliasSet,	X25_SubRegsSet,	Empty_SuperRegsSet },
    { "r26",	"X26",	X26_AliasSet,	X26_SubRegsSet,	Empty_SuperRegsSet },
    { "r27",	"X27",	X27_AliasSet,	X27_SubRegsSet,	Empty_SuperRegsSet },
    { "r28",	"X28",	X28_AliasSet,	X28_SubRegsSet,	Empty_SuperRegsSet },
    { "r29",	"X29",	X29_AliasSet,	X29_SubRegsSet,	Empty_SuperRegsSet },
    { "r3",	"X3",	X3_AliasSet,	X3_SubRegsSet,	Empty_SuperRegsSet },
    { "r30",	"X30",	X30_AliasSet,	X30_SubRegsSet,	Empty_SuperRegsSet },
    { "r31",	"X31",	X31_AliasSet,	X31_SubRegsSet,	Empty_SuperRegsSet },
    { "r4",	"X4",	X4_AliasSet,	X4_SubRegsSet,	Empty_SuperRegsSet },
    { "r5",	"X5",	X5_AliasSet,	X5_SubRegsSet,	Empty_SuperRegsSet },
    { "r6",	"X6",	X6_AliasSet,	X6_SubRegsSet,	Empty_SuperRegsSet },
    { "r7",	"X7",	X7_AliasSet,	X7_SubRegsSet,	Empty_SuperRegsSet },
    { "r8",	"X8",	X8_AliasSet,	X8_SubRegsSet,	Empty_SuperRegsSet },
    { "r9",	"X9",	X9_AliasSet,	X9_SubRegsSet,	Empty_SuperRegsSet },
  };
}

unsigned PPCGenRegisterInfo::getSubReg(unsigned RegNo, unsigned Index) const {
  switch (RegNo) {
  default:
    return 0;
  case PPC::CR0:
    switch (Index) {
    default: return 0;
    case 1: return PPC::CR0LT;
    case 2: return PPC::CR0GT;
    case 3: return PPC::CR0EQ;
    case 4: return PPC::CR0UN;
    };
    break;
  case PPC::CR1:
    switch (Index) {
    default: return 0;
    case 1: return PPC::CR1LT;
    case 2: return PPC::CR1GT;
    case 3: return PPC::CR1EQ;
    case 4: return PPC::CR1UN;
    };
    break;
  case PPC::CR2:
    switch (Index) {
    default: return 0;
    case 1: return PPC::CR2LT;
    case 2: return PPC::CR2GT;
    case 3: return PPC::CR2EQ;
    case 4: return PPC::CR2UN;
    };
    break;
  case PPC::CR3:
    switch (Index) {
    default: return 0;
    case 1: return PPC::CR3LT;
    case 2: return PPC::CR3GT;
    case 3: return PPC::CR3EQ;
    case 4: return PPC::CR3UN;
    };
    break;
  case PPC::CR4:
    switch (Index) {
    default: return 0;
    case 1: return PPC::CR4LT;
    case 2: return PPC::CR4GT;
    case 3: return PPC::CR4EQ;
    case 4: return PPC::CR4UN;
    };
    break;
  case PPC::CR5:
    switch (Index) {
    default: return 0;
    case 1: return PPC::CR5LT;
    case 2: return PPC::CR5GT;
    case 3: return PPC::CR5EQ;
    case 4: return PPC::CR5UN;
    };
    break;
  case PPC::CR6:
    switch (Index) {
    default: return 0;
    case 1: return PPC::CR6LT;
    case 2: return PPC::CR6GT;
    case 3: return PPC::CR6EQ;
    case 4: return PPC::CR6UN;
    };
    break;
  case PPC::CR7:
    switch (Index) {
    default: return 0;
    case 1: return PPC::CR7LT;
    case 2: return PPC::CR7GT;
    case 3: return PPC::CR7EQ;
    case 4: return PPC::CR7UN;
    };
    break;
  };
  return 0;
}

PPCGenRegisterInfo::PPCGenRegisterInfo(int CallFrameSetupOpcode, int CallFrameDestroyOpcode)
  : TargetRegisterInfo(RegisterDescriptors, 175, RegisterClasses, RegisterClasses+9,
                  CallFrameSetupOpcode, CallFrameDestroyOpcode,
                 SubregHashTable, SubregHashTableSize) {
}

int PPCGenRegisterInfo::getDwarfRegNumFull(unsigned RegNum, unsigned Flavour) const {
  switch (Flavour) {
  default:
    assert(0 && "Unknown DWARF flavour");
    return -1;
  case 0:
    switch (RegNum) {
    default:
      assert(0 && "Invalid RegNum");
      return -1;
    case PPC::CR0:
      return 68;
    case PPC::CR0EQ:
      return 0;
    case PPC::CR0GT:
      return 0;
    case PPC::CR0LT:
      return 0;
    case PPC::CR0UN:
      return 0;
    case PPC::CR1:
      return 69;
    case PPC::CR1EQ:
      return 0;
    case PPC::CR1GT:
      return 0;
    case PPC::CR1LT:
      return 0;
    case PPC::CR1UN:
      return 0;
    case PPC::CR2:
      return 70;
    case PPC::CR2EQ:
      return 0;
    case PPC::CR2GT:
      return 0;
    case PPC::CR2LT:
      return 0;
    case PPC::CR2UN:
      return 0;
    case PPC::CR3:
      return 71;
    case PPC::CR3EQ:
      return 0;
    case PPC::CR3GT:
      return 0;
    case PPC::CR3LT:
      return 0;
    case PPC::CR3UN:
      return 0;
    case PPC::CR4:
      return 72;
    case PPC::CR4EQ:
      return 0;
    case PPC::CR4GT:
      return 0;
    case PPC::CR4LT:
      return 0;
    case PPC::CR4UN:
      return 0;
    case PPC::CR5:
      return 73;
    case PPC::CR5EQ:
      return 0;
    case PPC::CR5GT:
      return 0;
    case PPC::CR5LT:
      return 0;
    case PPC::CR5UN:
      return 0;
    case PPC::CR6:
      return 74;
    case PPC::CR6EQ:
      return 0;
    case PPC::CR6GT:
      return 0;
    case PPC::CR6LT:
      return 0;
    case PPC::CR6UN:
      return 0;
    case PPC::CR7:
      return 75;
    case PPC::CR7EQ:
      return 0;
    case PPC::CR7GT:
      return 0;
    case PPC::CR7LT:
      return 0;
    case PPC::CR7UN:
      return 0;
    case PPC::CTR:
      return 66;
    case PPC::CTR8:
      return 66;
    case PPC::F0:
      return 32;
    case PPC::F1:
      return 33;
    case PPC::F10:
      return 42;
    case PPC::F11:
      return 43;
    case PPC::F12:
      return 44;
    case PPC::F13:
      return 45;
    case PPC::F14:
      return 46;
    case PPC::F15:
      return 47;
    case PPC::F16:
      return 48;
    case PPC::F17:
      return 49;
    case PPC::F18:
      return 50;
    case PPC::F19:
      return 51;
    case PPC::F2:
      return 34;
    case PPC::F20:
      return 52;
    case PPC::F21:
      return 53;
    case PPC::F22:
      return 54;
    case PPC::F23:
      return 55;
    case PPC::F24:
      return 56;
    case PPC::F25:
      return 57;
    case PPC::F26:
      return 58;
    case PPC::F27:
      return 59;
    case PPC::F28:
      return 60;
    case PPC::F29:
      return 61;
    case PPC::F3:
      return 35;
    case PPC::F30:
      return 62;
    case PPC::F31:
      return 63;
    case PPC::F4:
      return 36;
    case PPC::F5:
      return 37;
    case PPC::F6:
      return 38;
    case PPC::F7:
      return 39;
    case PPC::F8:
      return 40;
    case PPC::F9:
      return 41;
    case PPC::LR:
      return 65;
    case PPC::LR8:
      return 65;
    case PPC::R0:
      return 0;
    case PPC::R1:
      return 1;
    case PPC::R10:
      return 10;
    case PPC::R11:
      return 11;
    case PPC::R12:
      return 12;
    case PPC::R13:
      return 13;
    case PPC::R14:
      return 14;
    case PPC::R15:
      return 15;
    case PPC::R16:
      return 16;
    case PPC::R17:
      return 17;
    case PPC::R18:
      return 18;
    case PPC::R19:
      return 19;
    case PPC::R2:
      return 2;
    case PPC::R20:
      return 20;
    case PPC::R21:
      return 21;
    case PPC::R22:
      return 22;
    case PPC::R23:
      return 23;
    case PPC::R24:
      return 24;
    case PPC::R25:
      return 25;
    case PPC::R26:
      return 26;
    case PPC::R27:
      return 27;
    case PPC::R28:
      return 28;
    case PPC::R29:
      return 29;
    case PPC::R3:
      return 3;
    case PPC::R30:
      return 30;
    case PPC::R31:
      return 31;
    case PPC::R4:
      return 4;
    case PPC::R5:
      return 5;
    case PPC::R6:
      return 6;
    case PPC::R7:
      return 7;
    case PPC::R8:
      return 8;
    case PPC::R9:
      return 9;
    case PPC::RM:
      return 0;
    case PPC::V0:
      return 77;
    case PPC::V1:
      return 78;
    case PPC::V10:
      return 87;
    case PPC::V11:
      return 88;
    case PPC::V12:
      return 89;
    case PPC::V13:
      return 90;
    case PPC::V14:
      return 91;
    case PPC::V15:
      return 92;
    case PPC::V16:
      return 93;
    case PPC::V17:
      return 94;
    case PPC::V18:
      return 95;
    case PPC::V19:
      return 96;
    case PPC::V2:
      return 79;
    case PPC::V20:
      return 97;
    case PPC::V21:
      return 98;
    case PPC::V22:
      return 99;
    case PPC::V23:
      return 100;
    case PPC::V24:
      return 101;
    case PPC::V25:
      return 102;
    case PPC::V26:
      return 103;
    case PPC::V27:
      return 104;
    case PPC::V28:
      return 105;
    case PPC::V29:
      return 106;
    case PPC::V3:
      return 80;
    case PPC::V30:
      return 107;
    case PPC::V31:
      return 108;
    case PPC::V4:
      return 81;
    case PPC::V5:
      return 82;
    case PPC::V6:
      return 83;
    case PPC::V7:
      return 84;
    case PPC::V8:
      return 85;
    case PPC::V9:
      return 86;
    case PPC::VRSAVE:
      return 107;
    case PPC::X0:
      return 0;
    case PPC::X1:
      return 1;
    case PPC::X10:
      return 10;
    case PPC::X11:
      return 11;
    case PPC::X12:
      return 12;
    case PPC::X13:
      return 13;
    case PPC::X14:
      return 14;
    case PPC::X15:
      return 15;
    case PPC::X16:
      return 16;
    case PPC::X17:
      return 17;
    case PPC::X18:
      return 18;
    case PPC::X19:
      return 19;
    case PPC::X2:
      return 2;
    case PPC::X20:
      return 20;
    case PPC::X21:
      return 21;
    case PPC::X22:
      return 22;
    case PPC::X23:
      return 23;
    case PPC::X24:
      return 24;
    case PPC::X25:
      return 25;
    case PPC::X26:
      return 26;
    case PPC::X27:
      return 27;
    case PPC::X28:
      return 28;
    case PPC::X29:
      return 29;
    case PPC::X3:
      return 3;
    case PPC::X30:
      return 30;
    case PPC::X31:
      return 31;
    case PPC::X4:
      return 4;
    case PPC::X5:
      return 5;
    case PPC::X6:
      return 6;
    case PPC::X7:
      return 7;
    case PPC::X8:
      return 8;
    case PPC::X9:
      return 9;
    };
  };
}

} // End llvm namespace 
