//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Assembly Writer Source Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.  This method returns true if the
/// machine instruction was sufficiently described to print it, otherwise
/// it returns false.
bool X86ATTAsmPrinter::printInstruction(const MachineInstr *MI) {
  static const unsigned OpInfo[] = {
    2U,	// PHI
    0U,	// INLINEASM
    0U,	// DBG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// DECLARE
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    11U,	// ABS_F
    0U,	// ABS_Fp32
    0U,	// ABS_Fp64
    0U,	// ABS_Fp80
    67108881U,	// ADC32mi
    67108881U,	// ADC32mi8
    67108881U,	// ADC32mr
    135266321U,	// ADC32ri
    135266321U,	// ADC32ri8
    201326609U,	// ADC32rm
    135266321U,	// ADC32rr
    67174423U,	// ADC64mi32
    67174423U,	// ADC64mi8
    67174423U,	// ADC64mr
    135266327U,	// ADC64ri32
    135266327U,	// ADC64ri8
    268435479U,	// ADC64rm
    135266327U,	// ADC64rr
    67239965U,	// ADD16mi
    67239965U,	// ADD16mi8
    67239965U,	// ADD16mr
    135266333U,	// ADD16ri
    135266333U,	// ADD16ri8
    335544349U,	// ADD16rm
    135266333U,	// ADD16rr
    67108899U,	// ADD32mi
    67108899U,	// ADD32mi8
    67108899U,	// ADD32mr
    135266339U,	// ADD32ri
    135266339U,	// ADD32ri8
    201326627U,	// ADD32rm
    135266339U,	// ADD32rr
    67174441U,	// ADD64mi32
    67174441U,	// ADD64mi8
    67174441U,	// ADD64mr
    135266345U,	// ADD64ri32
    135266345U,	// ADD64ri8
    268435497U,	// ADD64rm
    135266345U,	// ADD64rr
    67305519U,	// ADD8mi
    67305519U,	// ADD8mr
    135266351U,	// ADD8ri
    402653231U,	// ADD8rm
    135266351U,	// ADD8rr
    469762101U,	// ADDPDrm
    135266357U,	// ADDPDrr
    469762108U,	// ADDPSrm
    135266364U,	// ADDPSrr
    536870979U,	// ADDSDrm
    536870979U,	// ADDSDrm_Int
    135266371U,	// ADDSDrr
    135266371U,	// ADDSDrr_Int
    603979850U,	// ADDSSrm
    603979850U,	// ADDSSrm_Int
    135266378U,	// ADDSSrr
    135266378U,	// ADDSSrr_Int
    469762129U,	// ADDSUBPDrm
    135266385U,	// ADDSUBPDrr
    469762139U,	// ADDSUBPSrm
    135266395U,	// ADDSUBPSrr
    671088741U,	// ADD_F32m
    738197612U,	// ADD_F64m
    805306483U,	// ADD_FI16m
    874512507U,	// ADD_FI32m
    941621379U,	// ADD_FPrST0
    941621386U,	// ADD_FST0r
    0U,	// ADD_Fp32
    0U,	// ADD_Fp32m
    0U,	// ADD_Fp64
    0U,	// ADD_Fp64m
    0U,	// ADD_Fp64m32
    0U,	// ADD_Fp80
    0U,	// ADD_Fp80m32
    0U,	// ADD_Fp80m64
    0U,	// ADD_FpI16m32
    0U,	// ADD_FpI16m64
    0U,	// ADD_FpI16m80
    0U,	// ADD_FpI32m32
    0U,	// ADD_FpI32m64
    0U,	// ADD_FpI32m80
    941621392U,	// ADD_FrST0
    158U,	// ADJCALLSTACKDOWN32
    158U,	// ADJCALLSTACKDOWN64
    177U,	// ADJCALLSTACKUP32
    177U,	// ADJCALLSTACKUP64
    67240130U,	// AND16mi
    67240130U,	// AND16mi8
    67240130U,	// AND16mr
    135266498U,	// AND16ri
    135266498U,	// AND16ri8
    335544514U,	// AND16rm
    135266498U,	// AND16rr
    67109064U,	// AND32mi
    67109064U,	// AND32mi8
    67109064U,	// AND32mr
    135266504U,	// AND32ri
    135266504U,	// AND32ri8
    201326792U,	// AND32rm
    135266504U,	// AND32rr
    67174606U,	// AND64mi32
    67174606U,	// AND64mi8
    67174606U,	// AND64mr
    135266510U,	// AND64ri32
    135266510U,	// AND64ri8
    268435662U,	// AND64rm
    135266510U,	// AND64rr
    67305684U,	// AND8mi
    67305684U,	// AND8mr
    135266516U,	// AND8ri
    402653396U,	// AND8rm
    135266516U,	// AND8rr
    469762266U,	// ANDNPDrm
    135266522U,	// ANDNPDrr
    469762274U,	// ANDNPSrm
    135266530U,	// ANDNPSrr
    469762282U,	// ANDPDrm
    135266538U,	// ANDPDrr
    469762289U,	// ANDPSrm
    135266545U,	// ANDPSrr
    248U,	// ATOMADD6432
    270U,	// ATOMAND16
    290U,	// ATOMAND32
    310U,	// ATOMAND64
    330U,	// ATOMAND6432
    352U,	// ATOMAND8
    371U,	// ATOMMAX16
    391U,	// ATOMMAX32
    411U,	// ATOMMAX64
    431U,	// ATOMMIN16
    451U,	// ATOMMIN32
    471U,	// ATOMMIN64
    491U,	// ATOMNAND16
    512U,	// ATOMNAND32
    533U,	// ATOMNAND64
    554U,	// ATOMNAND6432
    577U,	// ATOMNAND8
    597U,	// ATOMOR16
    616U,	// ATOMOR32
    635U,	// ATOMOR64
    654U,	// ATOMOR6432
    675U,	// ATOMOR8
    693U,	// ATOMSUB6432
    715U,	// ATOMSWAP6432
    738U,	// ATOMUMAX16
    759U,	// ATOMUMAX32
    780U,	// ATOMUMAX64
    801U,	// ATOMUMIN16
    822U,	// ATOMUMIN32
    843U,	// ATOMUMIN64
    864U,	// ATOMXOR16
    884U,	// ATOMXOR32
    904U,	// ATOMXOR64
    924U,	// ATOMXOR6432
    946U,	// ATOMXOR8
    1009779653U,	// BLENDPDrmi
    1073742789U,	// BLENDPDrri
    1009779662U,	// BLENDPSrmi
    1073742798U,	// BLENDPSrri
    1140851671U,	// BLENDVPDrm0
    135267287U,	// BLENDVPDrr0
    1140851688U,	// BLENDVPSrm0
    135267304U,	// BLENDVPSrr0
    1209009145U,	// BSF16rm
    1275331577U,	// BSF16rr
    1343226879U,	// BSF32rm
    1275331583U,	// BSF32rr
    1409287173U,	// BSF64rm
    1275331589U,	// BSF64rr
    1209009163U,	// BSR16rm
    1275331595U,	// BSR16rr
    1343226897U,	// BSR32rm
    1275331601U,	// BSR32rr
    1409287191U,	// BSR64rm
    1275331607U,	// BSR64rr
    941622301U,	// BSWAP32r
    941622309U,	// BSWAP64r
    67241005U,	// BT16mi8
    1275331629U,	// BT16ri8
    1275331629U,	// BT16rr
    67109938U,	// BT32mi8
    1275331634U,	// BT32ri8
    1275331634U,	// BT32rr
    67175479U,	// BT64mi8
    1275331639U,	// BT64ri8
    1275331639U,	// BT64rr
    874513468U,	// CALL32m
    941622332U,	// CALL32r
    1476396092U,	// CALL64m
    1545602115U,	// CALL64pcrel32
    941622332U,	// CALL64r
    1545602115U,	// CALLpcrel32
    1097U,	// CBW
    1103U,	// CDQ
    1109U,	// CDQE
    1115U,	// CHS_F
    0U,	// CHS_Fp32
    0U,	// CHS_Fp64
    0U,	// CHS_Fp80
    1610613857U,	// CLFLUSH
    335545450U,	// CMOVA16rm
    135267434U,	// CMOVA16rr
    201327722U,	// CMOVA32rm
    135267434U,	// CMOVA32rr
    268436586U,	// CMOVA64rm
    135267434U,	// CMOVA64rr
    335545457U,	// CMOVAE16rm
    135267441U,	// CMOVAE16rr
    201327729U,	// CMOVAE32rm
    135267441U,	// CMOVAE32rr
    268436593U,	// CMOVAE64rm
    135267441U,	// CMOVAE64rr
    335545465U,	// CMOVB16rm
    135267449U,	// CMOVB16rr
    201327737U,	// CMOVB32rm
    135267449U,	// CMOVB32rr
    268436601U,	// CMOVB64rm
    135267449U,	// CMOVB64rr
    335545472U,	// CMOVBE16rm
    135267456U,	// CMOVBE16rr
    201327744U,	// CMOVBE32rm
    135267456U,	// CMOVBE32rr
    268436608U,	// CMOVBE64rm
    135267456U,	// CMOVBE64rr
    943719560U,	// CMOVBE_F
    0U,	// CMOVBE_Fp32
    0U,	// CMOVBE_Fp64
    0U,	// CMOVBE_Fp80
    943719569U,	// CMOVB_F
    0U,	// CMOVB_Fp32
    0U,	// CMOVB_Fp64
    0U,	// CMOVB_Fp80
    335545497U,	// CMOVE16rm
    135267481U,	// CMOVE16rr
    201327769U,	// CMOVE32rm
    135267481U,	// CMOVE32rr
    268436633U,	// CMOVE64rm
    135267481U,	// CMOVE64rr
    943719584U,	// CMOVE_F
    0U,	// CMOVE_Fp32
    0U,	// CMOVE_Fp64
    0U,	// CMOVE_Fp80
    335545512U,	// CMOVG16rm
    135267496U,	// CMOVG16rr
    201327784U,	// CMOVG32rm
    135267496U,	// CMOVG32rr
    268436648U,	// CMOVG64rm
    135267496U,	// CMOVG64rr
    335545519U,	// CMOVGE16rm
    135267503U,	// CMOVGE16rr
    201327791U,	// CMOVGE32rm
    135267503U,	// CMOVGE32rr
    268436655U,	// CMOVGE64rm
    135267503U,	// CMOVGE64rr
    335545527U,	// CMOVL16rm
    135267511U,	// CMOVL16rr
    201327799U,	// CMOVL32rm
    135267511U,	// CMOVL32rr
    268436663U,	// CMOVL64rm
    135267511U,	// CMOVL64rr
    335545534U,	// CMOVLE16rm
    135267518U,	// CMOVLE16rr
    201327806U,	// CMOVLE32rm
    135267518U,	// CMOVLE32rr
    268436670U,	// CMOVLE64rm
    135267518U,	// CMOVLE64rr
    943719622U,	// CMOVNBE_F
    0U,	// CMOVNBE_Fp32
    0U,	// CMOVNBE_Fp64
    0U,	// CMOVNBE_Fp80
    943719632U,	// CMOVNB_F
    0U,	// CMOVNB_Fp32
    0U,	// CMOVNB_Fp64
    0U,	// CMOVNB_Fp80
    335545561U,	// CMOVNE16rm
    135267545U,	// CMOVNE16rr
    201327833U,	// CMOVNE32rm
    135267545U,	// CMOVNE32rr
    268436697U,	// CMOVNE64rm
    135267545U,	// CMOVNE64rr
    943719649U,	// CMOVNE_F
    0U,	// CMOVNE_Fp32
    0U,	// CMOVNE_Fp64
    0U,	// CMOVNE_Fp80
    335545578U,	// CMOVNO16rm
    135267562U,	// CMOVNO16rr
    201327850U,	// CMOVNO32rm
    135267562U,	// CMOVNO32rr
    268436714U,	// CMOVNO64rm
    135267562U,	// CMOVNO64rr
    335545586U,	// CMOVNP16rm
    135267570U,	// CMOVNP16rr
    201327858U,	// CMOVNP32rm
    135267570U,	// CMOVNP32rr
    268436722U,	// CMOVNP64rm
    135267570U,	// CMOVNP64rr
    943719674U,	// CMOVNP_F
    0U,	// CMOVNP_Fp32
    0U,	// CMOVNP_Fp64
    0U,	// CMOVNP_Fp80
    335545603U,	// CMOVNS16rm
    135267587U,	// CMOVNS16rr
    201327875U,	// CMOVNS32rm
    135267587U,	// CMOVNS32rr
    268436739U,	// CMOVNS64rm
    135267587U,	// CMOVNS64rr
    335545611U,	// CMOVO16rm
    135267595U,	// CMOVO16rr
    201327883U,	// CMOVO32rm
    135267595U,	// CMOVO32rr
    268436747U,	// CMOVO64rm
    135267595U,	// CMOVO64rr
    335545618U,	// CMOVP16rm
    135267602U,	// CMOVP16rr
    201327890U,	// CMOVP32rm
    135267602U,	// CMOVP32rr
    268436754U,	// CMOVP64rm
    135267602U,	// CMOVP64rr
    943719705U,	// CMOVP_F
    0U,	// CMOVP_Fp32
    0U,	// CMOVP_Fp64
    0U,	// CMOVP_Fp80
    335545634U,	// CMOVS16rm
    135267618U,	// CMOVS16rr
    201327906U,	// CMOVS32rm
    135267618U,	// CMOVS32rr
    268436770U,	// CMOVS64rm
    135267618U,	// CMOVS64rr
    1321U,	// CMOV_FR32
    1341U,	// CMOV_FR64
    1361U,	// CMOV_V1I64
    1382U,	// CMOV_V2F64
    1403U,	// CMOV_V2I64
    1424U,	// CMOV_V4F32
    67241381U,	// CMP16mi
    67241381U,	// CMP16mi8
    67241381U,	// CMP16mr
    1275332005U,	// CMP16ri
    1275332005U,	// CMP16ri8
    1209009573U,	// CMP16rm
    1275332005U,	// CMP16rr
    67110315U,	// CMP32mi
    67110315U,	// CMP32mi8
    67110315U,	// CMP32mr
    1275332011U,	// CMP32ri
    1275332011U,	// CMP32ri8
    1343227307U,	// CMP32rm
    1275332011U,	// CMP32rr
    67175857U,	// CMP64mi32
    67175857U,	// CMP64mi8
    67175857U,	// CMP64mr
    1275332017U,	// CMP64ri32
    1275332017U,	// CMP64ri8
    1409287601U,	// CMP64rm
    1275332017U,	// CMP64rr
    67306935U,	// CMP8mi
    67306935U,	// CMP8mr
    1275332023U,	// CMP8ri
    1678771639U,	// CMP8rm
    1275332023U,	// CMP8rr
    1750402493U,	// CMPPDrmi
    1817576893U,	// CMPPDrri
    1751451069U,	// CMPPSrmi
    1818625469U,	// CMPPSrri
    1752630717U,	// CMPSDrm
    1819674045U,	// CMPSDrr
    1753744829U,	// CMPSSrm
    1820722621U,	// CMPSSrr
    1473U,	// COS_F
    0U,	// COS_Fp32
    0U,	// COS_Fp64
    0U,	// COS_Fp80
    1479U,	// CQO
    1879049677U,	// CVTSD2SSrm
    1275332045U,	// CVTSD2SSrr
    1409287639U,	// CVTSI2SD64rm
    1275332055U,	// CVTSI2SD64rr
    1343227362U,	// CVTSI2SDrm
    1275332066U,	// CVTSI2SDrr
    1409287660U,	// CVTSI2SS64rm
    1275332076U,	// CVTSI2SS64rr
    1343227383U,	// CVTSI2SSrm
    1275332087U,	// CVTSI2SSrr
    1946158593U,	// CVTSS2SDrm
    1275332097U,	// CVTSS2SDrr
    1879049739U,	// CVTTSD2SI64rm
    1275332107U,	// CVTTSD2SI64rr
    1879049751U,	// CVTTSD2SIrm
    1275332119U,	// CVTTSD2SIrr
    1946158626U,	// CVTTSS2SI64rm
    1275332130U,	// CVTTSS2SI64rr
    1946158638U,	// CVTTSS2SIrm
    1275332142U,	// CVTTSS2SIrr
    1593U,	// CWD
    1599U,	// CWDE
    805307973U,	// DEC16m
    941622853U,	// DEC16r
    874513995U,	// DEC32m
    941622859U,	// DEC32r
    805307973U,	// DEC64_16m
    941622853U,	// DEC64_16r
    874513995U,	// DEC64_32m
    941622859U,	// DEC64_32r
    1476396625U,	// DEC64m
    941622865U,	// DEC64r
    1610614359U,	// DEC8m
    941622871U,	// DEC8r
    805307997U,	// DIV16m
    941622877U,	// DIV16r
    874514019U,	// DIV32m
    941622883U,	// DIV32r
    1476396649U,	// DIV64m
    941622889U,	// DIV64r
    1610614383U,	// DIV8m
    941622895U,	// DIV8r
    469763701U,	// DIVPDrm
    135267957U,	// DIVPDrr
    469763708U,	// DIVPSrm
    135267964U,	// DIVPSrr
    671090307U,	// DIVR_F32m
    738199179U,	// DIVR_F64m
    805308051U,	// DIVR_FI16m
    874514076U,	// DIVR_FI32m
    941622949U,	// DIVR_FPrST0
    941622956U,	// DIVR_FST0r
    0U,	// DIVR_Fp32m
    0U,	// DIVR_Fp64m
    0U,	// DIVR_Fp64m32
    0U,	// DIVR_Fp80m32
    0U,	// DIVR_Fp80m64
    0U,	// DIVR_FpI16m32
    0U,	// DIVR_FpI16m64
    0U,	// DIVR_FpI16m80
    0U,	// DIVR_FpI32m32
    0U,	// DIVR_FpI32m64
    0U,	// DIVR_FpI32m80
    941622963U,	// DIVR_FrST0
    536872641U,	// DIVSDrm
    536872641U,	// DIVSDrm_Int
    135268033U,	// DIVSDrr
    135268033U,	// DIVSDrr_Int
    603981512U,	// DIVSSrm
    603981512U,	// DIVSSrm_Int
    135268040U,	// DIVSSrr
    135268040U,	// DIVSSrr_Int
    671090383U,	// DIV_F32m
    738199254U,	// DIV_F64m
    805308125U,	// DIV_FI16m
    874514149U,	// DIV_FI32m
    941623021U,	// DIV_FPrST0
    941623029U,	// DIV_FST0r
    0U,	// DIV_Fp32
    0U,	// DIV_Fp32m
    0U,	// DIV_Fp64
    0U,	// DIV_Fp64m
    0U,	// DIV_Fp64m32
    0U,	// DIV_Fp80
    0U,	// DIV_Fp80m32
    0U,	// DIV_Fp80m64
    0U,	// DIV_FpI16m32
    0U,	// DIV_FpI16m64
    0U,	// DIV_FpI16m80
    0U,	// DIV_FpI32m32
    0U,	// DIV_FpI32m64
    0U,	// DIV_FpI32m80
    941623035U,	// DIV_FrST0
    1009780490U,	// DPPDrmi
    1073743626U,	// DPPDrri
    1009780496U,	// DPPSrmi
    1073743632U,	// DPPSrri
    2013267734U,	// DWARF_LOC
    941623068U,	// EH_RETURN
    941623068U,	// EH_RETURN64
    2090403635U,	// EXTRACTPSmr
    144705331U,	// EXTRACTPSrr
    805308222U,	// FLDCW16m
    805308229U,	// FNSTCW16m
    1869U,	// FNSTSW8r
    1877U,	// FP32_TO_INT16_IN_MEM
    1909U,	// FP32_TO_INT32_IN_MEM
    1941U,	// FP32_TO_INT64_IN_MEM
    1973U,	// FP64_TO_INT16_IN_MEM
    2005U,	// FP64_TO_INT32_IN_MEM
    2037U,	// FP64_TO_INT64_IN_MEM
    2069U,	// FP80_TO_INT16_IN_MEM
    2101U,	// FP80_TO_INT32_IN_MEM
    2133U,	// FP80_TO_INT64_IN_MEM
    2165U,	// FP_REG_KILL
    0U,	// FpGET_ST0_32
    0U,	// FpGET_ST0_64
    0U,	// FpGET_ST0_80
    0U,	// FpGET_ST1_32
    0U,	// FpGET_ST1_64
    0U,	// FpGET_ST1_80
    0U,	// FpSET_ST0_32
    0U,	// FpSET_ST0_64
    0U,	// FpSET_ST0_80
    469762266U,	// FsANDNPDrm
    135266522U,	// FsANDNPDrr
    469762274U,	// FsANDNPSrm
    135266530U,	// FsANDNPSrr
    469762282U,	// FsANDPDrm
    135266538U,	// FsANDPDrr
    469762289U,	// FsANDPSrm
    135266545U,	// FsANDPSrr
    939788420U,	// FsFLD0SD
    939788420U,	// FsFLD0SS
    2147485834U,	// FsMOVAPDrm
    1275332746U,	// FsMOVAPDrr
    2147485842U,	// FsMOVAPSrm
    1275332754U,	// FsMOVAPSrr
    469764250U,	// FsORPDrm
    135268506U,	// FsORPDrr
    469764256U,	// FsORPSrm
    135268512U,	// FsORPSrr
    469764262U,	// FsXORPDrm
    135268518U,	// FsXORPDrr
    469764269U,	// FsXORPSrm
    135268525U,	// FsXORPSrr
    1343228084U,	// GS_MOV32rm
    469764286U,	// HADDPDrm
    135268542U,	// HADDPDrr
    469764294U,	// HADDPSrm
    135268550U,	// HADDPSrr
    469764302U,	// HSUBPDrm
    135268558U,	// HSUBPDrr
    469764310U,	// HSUBPSrm
    135268566U,	// HSUBPSrr
    805308638U,	// IDIV16m
    941623518U,	// IDIV16r
    874514661U,	// IDIV32m
    941623525U,	// IDIV32r
    1476397292U,	// IDIV64m
    941623532U,	// IDIV64r
    1610615027U,	// IDIV8m
    941623539U,	// IDIV8r
    805308666U,	// ILD_F16m
    874514689U,	// ILD_F32m
    1476397320U,	// ILD_F64m
    0U,	// ILD_Fp16m32
    0U,	// ILD_Fp16m64
    0U,	// ILD_Fp16m80
    0U,	// ILD_Fp32m32
    0U,	// ILD_Fp32m64
    0U,	// ILD_Fp32m80
    0U,	// ILD_Fp64m32
    0U,	// ILD_Fp64m64
    0U,	// ILD_Fp64m80
    805308688U,	// IMUL16m
    941623568U,	// IMUL16r
    335546640U,	// IMUL16rm
    2092566800U,	// IMUL16rmi
    2092566800U,	// IMUL16rmi8
    135268624U,	// IMUL16rr
    144705808U,	// IMUL16rri
    144705808U,	// IMUL16rri8
    874514711U,	// IMUL32m
    941623575U,	// IMUL32r
    201328919U,	// IMUL32rm
    2093615383U,	// IMUL32rmi
    2093615383U,	// IMUL32rmi8
    135268631U,	// IMUL32rr
    144705815U,	// IMUL32rri
    144705815U,	// IMUL32rri8
    1476397342U,	// IMUL64m
    941623582U,	// IMUL64r
    268437790U,	// IMUL64rm
    2094663966U,	// IMUL64rmi32
    2094663966U,	// IMUL64rmi8
    135268638U,	// IMUL64rr
    144705822U,	// IMUL64rri32
    144705822U,	// IMUL64rri8
    1610615077U,	// IMUL8m
    941623589U,	// IMUL8r
    954206508U,	// IN16ri
    2353U,	// IN16rr
    955255103U,	// IN32ri
    2372U,	// IN32rr
    956303699U,	// IN8ri
    2392U,	// IN8rr
    805308774U,	// INC16m
    941623654U,	// INC16r
    874514796U,	// INC32m
    941623660U,	// INC32r
    805308774U,	// INC64_16m
    941623654U,	// INC64_16r
    874514796U,	// INC64_32m
    941623660U,	// INC64_32r
    1476397426U,	// INC64m
    941623666U,	// INC64r
    1610615160U,	// INC8m
    941623672U,	// INC8r
    1024461182U,	// INSERTPSrm
    1073744254U,	// INSERTPSrr
    805308808U,	// ISTT_FP16m
    874514833U,	// ISTT_FP32m
    1476397466U,	// ISTT_FP64m
    0U,	// ISTT_Fp16m32
    0U,	// ISTT_Fp16m64
    0U,	// ISTT_Fp16m80
    0U,	// ISTT_Fp32m32
    0U,	// ISTT_Fp32m64
    0U,	// ISTT_Fp32m80
    0U,	// ISTT_Fp64m32
    0U,	// ISTT_Fp64m64
    0U,	// ISTT_Fp64m80
    805308836U,	// IST_F16m
    874514859U,	// IST_F32m
    805308850U,	// IST_FP16m
    874514874U,	// IST_FP32m
    1476397506U,	// IST_FP64m
    0U,	// IST_Fp16m32
    0U,	// IST_Fp16m64
    0U,	// IST_Fp16m80
    0U,	// IST_Fp32m32
    0U,	// IST_Fp32m64
    0U,	// IST_Fp32m80
    0U,	// IST_Fp64m32
    0U,	// IST_Fp64m64
    0U,	// IST_Fp64m80
    1752630717U,	// Int_CMPSDrm
    1819674045U,	// Int_CMPSDrr
    1753744829U,	// Int_CMPSSrm
    1820722621U,	// Int_CMPSSrr
    2147486155U,	// Int_COMISDrm
    1275333067U,	// Int_COMISDrr
    2147486163U,	// Int_COMISSrm
    1275333075U,	// Int_COMISSrr
    1409288667U,	// Int_CVTDQ2PDrm
    1275333083U,	// Int_CVTDQ2PDrr
    2214595045U,	// Int_CVTDQ2PSrm
    1275333093U,	// Int_CVTDQ2PSrr
    2147486191U,	// Int_CVTPD2DQrm
    1275333103U,	// Int_CVTPD2DQrr
    2147486201U,	// Int_CVTPD2PIrm
    1275333113U,	// Int_CVTPD2PIrr
    2147486211U,	// Int_CVTPD2PSrm
    1275333123U,	// Int_CVTPD2PSrr
    1409288717U,	// Int_CVTPI2PDrm
    1275333133U,	// Int_CVTPI2PDrr
    268438039U,	// Int_CVTPI2PSrm
    135268887U,	// Int_CVTPI2PSrr
    2147486241U,	// Int_CVTPS2DQrm
    1275333153U,	// Int_CVTPS2DQrr
    1879050795U,	// Int_CVTPS2PDrm
    1275333163U,	// Int_CVTPS2PDrr
    1879050805U,	// Int_CVTPS2PIrm
    1275333173U,	// Int_CVTPS2PIrr
    2147486271U,	// Int_CVTSD2SI64rm
    1275333183U,	// Int_CVTSD2SI64rr
    2147486282U,	// Int_CVTSD2SIrm
    1275333194U,	// Int_CVTSD2SIrr
    536872397U,	// Int_CVTSD2SSrm
    135267789U,	// Int_CVTSD2SSrr
    268436951U,	// Int_CVTSI2SD64rm
    135267799U,	// Int_CVTSI2SD64rr
    201328098U,	// Int_CVTSI2SDrm
    135267810U,	// Int_CVTSI2SDrr
    268436972U,	// Int_CVTSI2SS64rm
    135267820U,	// Int_CVTSI2SS64rr
    201328119U,	// Int_CVTSI2SSrm
    135267831U,	// Int_CVTSI2SSrr
    603981313U,	// Int_CVTSS2SDrm
    135267841U,	// Int_CVTSS2SDrr
    1946159700U,	// Int_CVTSS2SI64rm
    1275333204U,	// Int_CVTSS2SI64rr
    1946159711U,	// Int_CVTSS2SIrm
    1275333215U,	// Int_CVTSS2SIrr
    2147486313U,	// Int_CVTTPD2DQrm
    1275333225U,	// Int_CVTTPD2DQrr
    2147486324U,	// Int_CVTTPD2PIrm
    1275333236U,	// Int_CVTTPD2PIrr
    2147486335U,	// Int_CVTTPS2DQrm
    1275333247U,	// Int_CVTTPS2DQrr
    1879050890U,	// Int_CVTTPS2PIrm
    1275333258U,	// Int_CVTTPS2PIrr
    2147485195U,	// Int_CVTTSD2SI64rm
    1275332107U,	// Int_CVTTSD2SI64rr
    2147485207U,	// Int_CVTTSD2SIrm
    1275332119U,	// Int_CVTTSD2SIrr
    1946158626U,	// Int_CVTTSS2SI64rm
    1275332130U,	// Int_CVTTSS2SI64rr
    1946158638U,	// Int_CVTTSS2SIrm
    1275332142U,	// Int_CVTTSS2SIrr
    2147486357U,	// Int_UCOMISDrm
    1275333269U,	// Int_UCOMISDrr
    2147486366U,	// Int_UCOMISSrm
    1275333278U,	// Int_UCOMISSrr
    941623975U,	// JA
    941623979U,	// JAE
    941623984U,	// JB
    941623988U,	// JBE
    941623993U,	// JE
    941623997U,	// JG
    941624001U,	// JGE
    941624006U,	// JL
    941624010U,	// JLE
    941624015U,	// JMP
    874515156U,	// JMP32m
    941624020U,	// JMP32r
    1476397787U,	// JMP64m
    941624027U,	// JMP64r
    941624034U,	// JNE
    941624039U,	// JNO
    941624044U,	// JNP
    941624049U,	// JNS
    941624054U,	// JO
    941624058U,	// JP
    941624062U,	// JS
    2818U,	// LAHF
    67242760U,	// LCMPXCHG16
    67111704U,	// LCMPXCHG32
    85986088U,	// LCMPXCHG64
    67308344U,	// LCMPXCHG8
    874515272U,	// LCMPXCHG8B
    2214595417U,	// LDDQUrm
    874515296U,	// LDMXCSR
    2921U,	// LD_F0
    2927U,	// LD_F1
    671091573U,	// LD_F32m
    738200443U,	// LD_F64m
    2281704321U,	// LD_F80m
    0U,	// LD_Fp032
    0U,	// LD_Fp064
    0U,	// LD_Fp080
    0U,	// LD_Fp132
    0U,	// LD_Fp164
    0U,	// LD_Fp180
    0U,	// LD_Fp32m
    0U,	// LD_Fp32m64
    0U,	// LD_Fp32m80
    0U,	// LD_Fp64m
    0U,	// LD_Fp64m80
    0U,	// LD_Fp80m
    941624199U,	// LD_Frr
    1343228812U,	// LEA16r
    1343228818U,	// LEA32r
    2348813202U,	// LEA64_32r
    1409289112U,	// LEA64r
    2974U,	// LEAVE
    2974U,	// LEAVE64
    2981U,	// LFENCE
    2092633005U,	// LXADD16
    2093681594U,	// LXADD32
    2094730183U,	// LXADD64
    2100300755U,	// LXADD8
    1275333600U,	// MASKMOVDQU
    469765100U,	// MAXPDrm
    469765100U,	// MAXPDrm_Int
    135269356U,	// MAXPDrr
    135269356U,	// MAXPDrr_Int
    469765107U,	// MAXPSrm
    469765107U,	// MAXPSrm_Int
    135269363U,	// MAXPSrr
    135269363U,	// MAXPSrr_Int
    536873978U,	// MAXSDrm
    536873978U,	// MAXSDrm_Int
    135269370U,	// MAXSDrr
    135269370U,	// MAXSDrr_Int
    603982849U,	// MAXSSrm
    603982849U,	// MAXSSrm_Int
    135269377U,	// MAXSSrr
    135269377U,	// MAXSSrr_Int
    3080U,	// MFENCE
    469765136U,	// MINPDrm
    469765136U,	// MINPDrm_Int
    135269392U,	// MINPDrr
    135269392U,	// MINPDrr_Int
    469765143U,	// MINPSrm
    469765143U,	// MINPSrm_Int
    135269399U,	// MINPSrr
    135269399U,	// MINPSrr_Int
    536874014U,	// MINSDrm
    536874014U,	// MINSDrm_Int
    135269406U,	// MINSDrr
    135269406U,	// MINSDrr_Int
    603982885U,	// MINSSrm
    603982885U,	// MINSSrm_Int
    135269413U,	// MINSSrr
    135269413U,	// MINSSrr_Int
    2147486201U,	// MMX_CVTPD2PIrm
    1275333113U,	// MMX_CVTPD2PIrr
    1409288717U,	// MMX_CVTPI2PDrm
    1275333133U,	// MMX_CVTPI2PDrr
    1409288727U,	// MMX_CVTPI2PSrm
    1275333143U,	// MMX_CVTPI2PSrr
    1879050805U,	// MMX_CVTPS2PIrm
    1275333173U,	// MMX_CVTPS2PIrr
    2147486324U,	// MMX_CVTTPD2PIrm
    1275333236U,	// MMX_CVTTPD2PIrr
    1879050890U,	// MMX_CVTTPS2PIrm
    1275333258U,	// MMX_CVTTPS2PIrr
    3116U,	// MMX_EMMS
    3122U,	// MMX_FEMMS
    1275333689U,	// MMX_MASKMOVQ
    1275333689U,	// MMX_MASKMOVQ64
    1275333699U,	// MMX_MOVD64from64rr
    67112003U,	// MMX_MOVD64mr
    1343228995U,	// MMX_MOVD64rm
    1275333699U,	// MMX_MOVD64rr
    1275333699U,	// MMX_MOVD64to64rr
    1275333705U,	// MMX_MOVDQ2Qrr
    67177554U,	// MMX_MOVNTQmr
    1275333722U,	// MMX_MOVQ2DQrr
    67177571U,	// MMX_MOVQ64mr
    1409289315U,	// MMX_MOVQ64rm
    1275333731U,	// MMX_MOVQ64rr
    1343228995U,	// MMX_MOVZDI2PDIrm
    1275333699U,	// MMX_MOVZDI2PDIrr
    268438633U,	// MMX_PACKSSDWrm
    135269481U,	// MMX_PACKSSDWrr
    268438643U,	// MMX_PACKSSWBrm
    135269491U,	// MMX_PACKSSWBrr
    268438653U,	// MMX_PACKUSWBrm
    135269501U,	// MMX_PACKUSWBrr
    268438663U,	// MMX_PADDBrm
    135269511U,	// MMX_PADDBrr
    268438670U,	// MMX_PADDDrm
    135269518U,	// MMX_PADDDrr
    268438677U,	// MMX_PADDQrm
    135269525U,	// MMX_PADDQrr
    268438684U,	// MMX_PADDSBrm
    135269532U,	// MMX_PADDSBrr
    268438692U,	// MMX_PADDSWrm
    135269540U,	// MMX_PADDSWrr
    268438700U,	// MMX_PADDUSBrm
    135269548U,	// MMX_PADDUSBrr
    268438709U,	// MMX_PADDUSWrm
    135269557U,	// MMX_PADDUSWrr
    268438718U,	// MMX_PADDWrm
    135269566U,	// MMX_PADDWrr
    268438725U,	// MMX_PANDNrm
    135269573U,	// MMX_PANDNrr
    268438732U,	// MMX_PANDrm
    135269580U,	// MMX_PANDrr
    268438738U,	// MMX_PAVGBrm
    135269586U,	// MMX_PAVGBrr
    268438745U,	// MMX_PAVGWrm
    135269593U,	// MMX_PAVGWrr
    268438752U,	// MMX_PCMPEQBrm
    135269600U,	// MMX_PCMPEQBrr
    268438761U,	// MMX_PCMPEQDrm
    135269609U,	// MMX_PCMPEQDrr
    268438770U,	// MMX_PCMPEQWrm
    135269618U,	// MMX_PCMPEQWrr
    268438779U,	// MMX_PCMPGTBrm
    135269627U,	// MMX_PCMPGTBrr
    268438788U,	// MMX_PCMPGTDrm
    135269636U,	// MMX_PCMPGTDrr
    268438797U,	// MMX_PCMPGTWrm
    135269645U,	// MMX_PCMPGTWrr
    144706838U,	// MMX_PEXTRWri
    1027607838U,	// MMX_PINSRWrmi
    1073745182U,	// MMX_PINSRWrri
    268438822U,	// MMX_PMADDWDrm
    135269670U,	// MMX_PMADDWDrr
    268438831U,	// MMX_PMAXSWrm
    135269679U,	// MMX_PMAXSWrr
    268438839U,	// MMX_PMAXUBrm
    135269687U,	// MMX_PMAXUBrr
    268438847U,	// MMX_PMINSWrm
    135269695U,	// MMX_PMINSWrr
    268438855U,	// MMX_PMINUBrm
    135269703U,	// MMX_PMINUBrr
    1275333967U,	// MMX_PMOVMSKBrr
    268438873U,	// MMX_PMULHUWrm
    135269721U,	// MMX_PMULHUWrr
    268438882U,	// MMX_PMULHWrm
    135269730U,	// MMX_PMULHWrr
    268438890U,	// MMX_PMULLWrm
    135269738U,	// MMX_PMULLWrr
    268438898U,	// MMX_PMULUDQrm
    135269746U,	// MMX_PMULUDQrr
    268438907U,	// MMX_PORrm
    135269755U,	// MMX_PORrr
    268438912U,	// MMX_PSADBWrm
    135269760U,	// MMX_PSADBWrr
    2094665096U,	// MMX_PSHUFWmi
    144706952U,	// MMX_PSHUFWri
    135269776U,	// MMX_PSLLDri
    268438928U,	// MMX_PSLLDrm
    135269776U,	// MMX_PSLLDrr
    135269783U,	// MMX_PSLLQri
    268438935U,	// MMX_PSLLQrm
    135269783U,	// MMX_PSLLQrr
    135269790U,	// MMX_PSLLWri
    268438942U,	// MMX_PSLLWrm
    135269790U,	// MMX_PSLLWrr
    135269797U,	// MMX_PSRADri
    268438949U,	// MMX_PSRADrm
    135269797U,	// MMX_PSRADrr
    135269804U,	// MMX_PSRAWri
    268438956U,	// MMX_PSRAWrm
    135269804U,	// MMX_PSRAWrr
    135269811U,	// MMX_PSRLDri
    268438963U,	// MMX_PSRLDrm
    135269811U,	// MMX_PSRLDrr
    135269818U,	// MMX_PSRLQri
    268438970U,	// MMX_PSRLQrm
    135269818U,	// MMX_PSRLQrr
    135269825U,	// MMX_PSRLWri
    268438977U,	// MMX_PSRLWrm
    135269825U,	// MMX_PSRLWrr
    268438984U,	// MMX_PSUBBrm
    135269832U,	// MMX_PSUBBrr
    268438991U,	// MMX_PSUBDrm
    135269839U,	// MMX_PSUBDrr
    268438998U,	// MMX_PSUBQrm
    135269846U,	// MMX_PSUBQrr
    268439005U,	// MMX_PSUBSBrm
    135269853U,	// MMX_PSUBSBrr
    268439013U,	// MMX_PSUBSWrm
    135269861U,	// MMX_PSUBSWrr
    268439021U,	// MMX_PSUBUSBrm
    135269869U,	// MMX_PSUBUSBrr
    268439030U,	// MMX_PSUBUSWrm
    135269878U,	// MMX_PSUBUSWrr
    268439039U,	// MMX_PSUBWrm
    135269887U,	// MMX_PSUBWrr
    268439046U,	// MMX_PUNPCKHBWrm
    135269894U,	// MMX_PUNPCKHBWrr
    268439057U,	// MMX_PUNPCKHDQrm
    135269905U,	// MMX_PUNPCKHDQrr
    268439068U,	// MMX_PUNPCKHWDrm
    135269916U,	// MMX_PUNPCKHWDrr
    268439079U,	// MMX_PUNPCKLBWrm
    135269927U,	// MMX_PUNPCKLBWrr
    268439090U,	// MMX_PUNPCKLDQrm
    135269938U,	// MMX_PUNPCKLDQrr
    268439101U,	// MMX_PUNPCKLWDrm
    135269949U,	// MMX_PUNPCKLWDrr
    268437636U,	// MMX_PXORrm
    135268484U,	// MMX_PXORrr
    939788420U,	// MMX_V_SET0
    939789545U,	// MMX_V_SETALLONES
    3656U,	// MONITOR
    67243601U,	// MOV16_mr
    1209011793U,	// MOV16_rm
    1275334225U,	// MOV16_rr
    67243601U,	// MOV16mi
    67243601U,	// MOV16mr
    2415922775U,	// MOV16r0
    1275334225U,	// MOV16ri
    1209011793U,	// MOV16rm
    1275334225U,	// MOV16rr
    1275334225U,	// MOV16to16_
    67112541U,	// MOV32_mr
    1343229533U,	// MOV32_rm
    1275334237U,	// MOV32_rr
    67112541U,	// MOV32mi
    67112541U,	// MOV32mr
    939789911U,	// MOV32r0
    1275334237U,	// MOV32ri
    1343229533U,	// MOV32rm
    1275334237U,	// MOV32rr
    1275334237U,	// MOV32to32_
    1409289827U,	// MOV64GSrm
    67177571U,	// MOV64mi32
    67177571U,	// MOV64mr
    2415922775U,	// MOV64r0
    1275334253U,	// MOV64ri
    1275333731U,	// MOV64ri32
    1275858525U,	// MOV64ri64i32
    1409289315U,	// MOV64rm
    1275333731U,	// MOV64rr
    1275333699U,	// MOV64toPQIrr
    1409289315U,	// MOV64toSDrm
    1275333699U,	// MOV64toSDrr
    67309174U,	// MOV8mi
    67309174U,	// MOV8mr
    939789948U,	// MOV8r0
    1275334262U,	// MOV8ri
    1678773878U,	// MOV8rm
    1275334262U,	// MOV8rr
    67963018U,	// MOVAPDmr
    2147485834U,	// MOVAPDrm
    1275332746U,	// MOVAPDrr
    67963026U,	// MOVAPSmr
    2147485842U,	// MOVAPSrm
    1275332754U,	// MOVAPSrr
    1879051906U,	// MOVDDUPrm
    1275334274U,	// MOVDDUPrr
    1343228995U,	// MOVDI2PDIrm
    1275333699U,	// MOVDI2PDIrr
    1343228995U,	// MOVDI2SSrm
    1275333699U,	// MOVDI2SSrr
    68030091U,	// MOVDQAmr
    2214596235U,	// MOVDQArm
    1275334283U,	// MOVDQArr
    68030099U,	// MOVDQUmr
    68030099U,	// MOVDQUmr_Int
    2214596243U,	// MOVDQUrm
    2214596243U,	// MOVDQUrm_Int
    135270043U,	// MOVHLPSrr
    68095652U,	// MOVHPDmr
    536874660U,	// MOVHPDrm
    68095660U,	// MOVHPSmr
    536874668U,	// MOVHPSrm
    135270068U,	// MOVLHPSrr
    68095677U,	// MOVLPDmr
    536874685U,	// MOVLPDrm
    135270085U,	// MOVLPDrr
    68095692U,	// MOVLPSmr
    536874700U,	// MOVLPSrm
    135270100U,	// MOVLPSrr
    67177571U,	// MOVLQ128mr
    135270085U,	// MOVLSD2PDrr
    135270100U,	// MOVLSS2PSrr
    1275334363U,	// MOVMSKPDrr
    1275334373U,	// MOVMSKPSrr
    2214596335U,	// MOVNTDQArm
    67964665U,	// MOVNTDQmr
    67112706U,	// MOVNTImr
    68030218U,	// MOVNTPDmr
    68030227U,	// MOVNTPSmr
    2483029059U,	// MOVPC32r
    68095685U,	// MOVPD2SDmr
    1275334341U,	// MOVPD2SDrr
    67112003U,	// MOVPDI2DImr
    1275333699U,	// MOVPDI2DIrr
    67177571U,	// MOVPQI2QImr
    1275333699U,	// MOVPQIto64rr
    67702484U,	// MOVPS2SSmr
    1275334356U,	// MOVPS2SSrr
    1409289315U,	// MOVQI2PQIrm
    1879051973U,	// MOVSD2PDrm
    1275334341U,	// MOVSD2PDrr
    68095685U,	// MOVSDmr
    1879051973U,	// MOVSDrm
    1275334341U,	// MOVSDrr
    67177571U,	// MOVSDto64mr
    1275333699U,	// MOVSDto64rr
    2147487516U,	// MOVSHDUPrm
    1275334428U,	// MOVSHDUPrr
    2147487526U,	// MOVSLDUPrm
    1275334438U,	// MOVSLDUPrr
    67112003U,	// MOVSS2DImr
    1275333699U,	// MOVSS2DIrr
    1946160852U,	// MOVSS2PSrm
    1275334356U,	// MOVSS2PSrr
    67702484U,	// MOVSSmr
    1946160852U,	// MOVSSrm
    1275334356U,	// MOVSSrr
    1699745584U,	// MOVSX16rm8
    1275858736U,	// MOVSX16rr8
    1209012024U,	// MOVSX32rm16
    1678774064U,	// MOVSX32rm8
    1275334456U,	// MOVSX32rr16
    1275334448U,	// MOVSX32rr8
    1209012032U,	// MOVSX64rm16
    1343229768U,	// MOVSX64rm32
    1678774096U,	// MOVSX64rm8
    1275334464U,	// MOVSX64rr16
    1275334472U,	// MOVSX64rr32
    1275334480U,	// MOVSX64rr8
    67964760U,	// MOVUPDmr
    67964760U,	// MOVUPDmr_Int
    2147487576U,	// MOVUPDrm
    2147487576U,	// MOVUPDrm_Int
    1275334488U,	// MOVUPDrr
    67964768U,	// MOVUPSmr
    67964768U,	// MOVUPSmr_Int
    2147487584U,	// MOVUPSrm
    2147487584U,	// MOVUPSrm_Int
    1275334496U,	// MOVUPSrr
    1343228995U,	// MOVZDI2PDIrm
    1275333699U,	// MOVZDI2PDIrr
    2214595683U,	// MOVZPQILo2PQIrm
    1275333731U,	// MOVZPQILo2PQIrr
    1409289315U,	// MOVZQI2PQIrm
    1275333699U,	// MOVZQI2PQIrr
    1879051973U,	// MOVZSD2PDrm
    1946160852U,	// MOVZSS2PSrm
    1699745640U,	// MOVZX16rm8
    1275858792U,	// MOVZX16rr8
    1209012080U,	// MOVZX32rm16
    1678774120U,	// MOVZX32rm8
    1275334512U,	// MOVZX32rr16
    1275334504U,	// MOVZX32rr8
    1229983600U,	// MOVZX64rm16
    1364201053U,	// MOVZX64rm32
    1699745640U,	// MOVZX64rm8
    1275858800U,	// MOVZX64rr16
    1275858525U,	// MOVZX64rr32
    1275858792U,	// MOVZX64rr8
    0U,	// MOV_Fp3232
    0U,	// MOV_Fp3264
    0U,	// MOV_Fp3280
    0U,	// MOV_Fp6432
    0U,	// MOV_Fp6464
    0U,	// MOV_Fp6480
    0U,	// MOV_Fp8032
    0U,	// MOV_Fp8064
    0U,	// MOV_Fp8080
    1009782648U,	// MPSADBWrmi
    1073745784U,	// MPSADBWrri
    805310337U,	// MUL16m
    941625217U,	// MUL16r
    874516359U,	// MUL32m
    941625223U,	// MUL32r
    1476398989U,	// MUL64m
    941625229U,	// MUL64r
    1610616723U,	// MUL8m
    941625235U,	// MUL8r
    469766041U,	// MULPDrm
    135270297U,	// MULPDrr
    469766048U,	// MULPSrm
    135270304U,	// MULPSrr
    536874919U,	// MULSDrm
    536874919U,	// MULSDrm_Int
    135270311U,	// MULSDrr
    135270311U,	// MULSDrr_Int
    603983790U,	// MULSSrm
    603983790U,	// MULSSrm_Int
    135270318U,	// MULSSrr
    135270318U,	// MULSSrr_Int
    671092661U,	// MUL_F32m
    738201532U,	// MUL_F64m
    805310403U,	// MUL_FI16m
    874516427U,	// MUL_FI32m
    941625299U,	// MUL_FPrST0
    941625306U,	// MUL_FST0r
    0U,	// MUL_Fp32
    0U,	// MUL_Fp32m
    0U,	// MUL_Fp64
    0U,	// MUL_Fp64m
    0U,	// MUL_Fp64m32
    0U,	// MUL_Fp80
    0U,	// MUL_Fp80m32
    0U,	// MUL_Fp80m64
    0U,	// MUL_FpI16m32
    0U,	// MUL_FpI16m64
    0U,	// MUL_FpI16m80
    0U,	// MUL_FpI32m32
    0U,	// MUL_FpI32m64
    0U,	// MUL_FpI32m80
    941625312U,	// MUL_FrST0
    4078U,	// MWAIT
    805310453U,	// NEG16m
    941625333U,	// NEG16r
    874516475U,	// NEG32m
    941625339U,	// NEG32r
    1476399105U,	// NEG64m
    941625345U,	// NEG64r
    1610616839U,	// NEG8m
    941625351U,	// NEG8r
    4109U,	// NOOP
    805310482U,	// NOT16m
    941625362U,	// NOT16r
    874516504U,	// NOT32m
    941625368U,	// NOT32r
    1476399134U,	// NOT64m
    941625374U,	// NOT64r
    1610616868U,	// NOT8m
    941625380U,	// NOT8r
    67244074U,	// OR16mi
    67244074U,	// OR16mi8
    67244074U,	// OR16mr
    135270442U,	// OR16ri
    135270442U,	// OR16ri8
    335548458U,	// OR16rm
    135270442U,	// OR16rr
    67113007U,	// OR32mi
    67113007U,	// OR32mi8
    67113007U,	// OR32mr
    135270447U,	// OR32ri
    135270447U,	// OR32ri8
    201330735U,	// OR32rm
    135270447U,	// OR32rr
    67178548U,	// OR64mi32
    67178548U,	// OR64mi8
    67178548U,	// OR64mr
    135270452U,	// OR64ri32
    135270452U,	// OR64ri8
    268439604U,	// OR64rm
    135270452U,	// OR64rr
    67309625U,	// OR8mi
    67309625U,	// OR8mr
    135270457U,	// OR8ri
    402657337U,	// OR8rm
    135270457U,	// OR8rr
    469764250U,	// ORPDrm
    135268506U,	// ORPDrr
    469764256U,	// ORPSrm
    135268512U,	// ORPSrr
    941625406U,	// OUT16ir
    4169U,	// OUT16rr
    941625432U,	// OUT32ir
    4196U,	// OUT32rr
    941625460U,	// OUT8ir
    4223U,	// OUT8rr
    2214596750U,	// PABSBrm128
    1409290382U,	// PABSBrm64
    1275334798U,	// PABSBrr128
    1275334798U,	// PABSBrr64
    2214596757U,	// PABSDrm128
    1409290389U,	// PABSDrm64
    1275334805U,	// PABSDrr128
    1275334805U,	// PABSDrr64
    2214596764U,	// PABSWrm128
    1409290396U,	// PABSWrm64
    1275334812U,	// PABSWrr128
    1275334812U,	// PABSWrr64
    1140853865U,	// PACKSSDWrm
    135269481U,	// PACKSSDWrr
    1140853875U,	// PACKSSWBrm
    135269491U,	// PACKSSWBrr
    1140854947U,	// PACKUSDWrm
    135270563U,	// PACKUSDWrr
    1140853885U,	// PACKUSWBrm
    135269501U,	// PACKUSWBrr
    1140853895U,	// PADDBrm
    135269511U,	// PADDBrr
    1140853902U,	// PADDDrm
    135269518U,	// PADDDrr
    1140853909U,	// PADDQrm
    135269525U,	// PADDQrr
    1140853916U,	// PADDSBrm
    135269532U,	// PADDSBrr
    1140853924U,	// PADDSWrm
    135269540U,	// PADDSWrr
    1140853932U,	// PADDUSBrm
    135269548U,	// PADDUSBrr
    1140853941U,	// PADDUSWrm
    135269557U,	// PADDUSWrr
    1140853950U,	// PADDWrm
    135269566U,	// PADDWrr
    1009782957U,	// PALIGNR128rm
    1073746093U,	// PALIGNR128rr
    1029705901U,	// PALIGNR64rm
    1073746093U,	// PALIGNR64rr
    1140853957U,	// PANDNrm
    135269573U,	// PANDNrr
    1140853964U,	// PANDrm
    135269580U,	// PANDrr
    1140853970U,	// PAVGBrm
    135269586U,	// PAVGBrr
    1140853977U,	// PAVGWrm
    135269593U,	// PAVGWrr
    1140854966U,	// PBLENDVBrm0
    135270582U,	// PBLENDVBrr0
    1009782983U,	// PBLENDWrmi
    1073746119U,	// PBLENDWrri
    1140853984U,	// PCMPEQBrm
    135269600U,	// PCMPEQBrr
    1140853993U,	// PCMPEQDrm
    135269609U,	// PCMPEQDrr
    1140854992U,	// PCMPEQQrm
    135270608U,	// PCMPEQQrr
    1140854002U,	// PCMPEQWrm
    135269618U,	// PCMPEQWrr
    1140854011U,	// PCMPGTBrm
    135269627U,	// PCMPGTBrr
    1140854020U,	// PCMPGTDrm
    135269636U,	// PCMPGTDrr
    1140855001U,	// PCMPGTQrm
    135270617U,	// PCMPGTQrr
    1140854029U,	// PCMPGTWrm
    135269645U,	// PCMPGTWrr
    2090012898U,	// PEXTRBmr
    144707810U,	// PEXTRBrr
    2089816298U,	// PEXTRDmr
    144707818U,	// PEXTRDrr
    2089881842U,	// PEXTRQmr
    144707826U,	// PEXTRQrr
    2089946390U,	// PEXTRWmr
    144706838U,	// PEXTRWri
    1140855034U,	// PHADDDrm128
    268439802U,	// PHADDDrm64
    135270650U,	// PHADDDrr128
    135270650U,	// PHADDDrr64
    1140855042U,	// PHADDSWrm128
    268439810U,	// PHADDSWrm64
    135270658U,	// PHADDSWrr128
    135270658U,	// PHADDSWrr64
    1140855051U,	// PHADDWrm128
    268439819U,	// PHADDWrm64
    135270667U,	// PHADDWrr128
    135270667U,	// PHADDWrr64
    2214596883U,	// PHMINPOSUWrm128
    1275334931U,	// PHMINPOSUWrr128
    1140855071U,	// PHSUBDrm128
    268439839U,	// PHSUBDrm64
    135270687U,	// PHSUBDrr128
    135270687U,	// PHSUBDrr64
    1140855079U,	// PHSUBSWrm128
    268439847U,	// PHSUBSWrm64
    135270695U,	// PHSUBSWrr128
    135270695U,	// PHSUBSWrr64
    1140855088U,	// PHSUBWrm128
    268439856U,	// PHSUBWrm64
    135270704U,	// PHSUBWrr128
    135270704U,	// PHSUBWrr64
    1030754616U,	// PINSRBrm
    1073746232U,	// PINSRBrr
    1031803200U,	// PINSRDrm
    1073746240U,	// PINSRDrr
    1029706056U,	// PINSRQrm
    1073746248U,	// PINSRQrr
    1027607838U,	// PINSRWrmi
    1073745182U,	// PINSRWrri
    1140855120U,	// PMADDUBSWrm128
    268439888U,	// PMADDUBSWrm64
    135270736U,	// PMADDUBSWrr128
    135270736U,	// PMADDUBSWrr64
    1140854054U,	// PMADDWDrm
    135269670U,	// PMADDWDrr
    1140855131U,	// PMAXSBrm
    135270747U,	// PMAXSBrr
    1140855139U,	// PMAXSDrm
    135270755U,	// PMAXSDrr
    1140854063U,	// PMAXSWrm
    135269679U,	// PMAXSWrr
    1140854071U,	// PMAXUBrm
    135269687U,	// PMAXUBrr
    1140855147U,	// PMAXUDrm
    135270763U,	// PMAXUDrr
    1140855155U,	// PMAXUWrm
    135270771U,	// PMAXUWrr
    1140855163U,	// PMINSBrm
    135270779U,	// PMINSBrr
    1140855171U,	// PMINSDrm
    135270787U,	// PMINSDrr
    1140854079U,	// PMINSWrm
    135269695U,	// PMINSWrr
    1140854087U,	// PMINUBrm
    135269703U,	// PMINUBrr
    1140855179U,	// PMINUDrm
    135270795U,	// PMINUDrr
    1140855187U,	// PMINUWrm
    135270803U,	// PMINUWrr
    1275333967U,	// PMOVMSKBrr
    1343230363U,	// PMOVSXBDrm
    1275335067U,	// PMOVSXBDrr
    1209012645U,	// PMOVSXBQrm
    1275335077U,	// PMOVSXBQrr
    1409290671U,	// PMOVSXBWrm
    1275335087U,	// PMOVSXBWrr
    1409290681U,	// PMOVSXDQrm
    1275335097U,	// PMOVSXDQrr
    1409290691U,	// PMOVSXWDrm
    1275335107U,	// PMOVSXWDrr
    1343230413U,	// PMOVSXWQrm
    1275335117U,	// PMOVSXWQrr
    1343230423U,	// PMOVZXBDrm
    1275335127U,	// PMOVZXBDrr
    1209012645U,	// PMOVZXBQrm
    1275335077U,	// PMOVZXBQrr
    1409290721U,	// PMOVZXBWrm
    1275335137U,	// PMOVZXBWrr
    1409290731U,	// PMOVZXDQrm
    1275335147U,	// PMOVZXDQrr
    1409290741U,	// PMOVZXWDrm
    1275335157U,	// PMOVZXWDrr
    1343230463U,	// PMOVZXWQrm
    1275335167U,	// PMOVZXWQrr
    1140855305U,	// PMULDQrm
    135270921U,	// PMULDQrr
    1140855313U,	// PMULHRSWrm128
    268440081U,	// PMULHRSWrm64
    135270929U,	// PMULHRSWrr128
    135270929U,	// PMULHRSWrr64
    1140854105U,	// PMULHUWrm
    135269721U,	// PMULHUWrr
    1140854114U,	// PMULHWrm
    135269730U,	// PMULHWrr
    1140855323U,	// PMULLDrm
    1140855323U,	// PMULLDrm_int
    135270939U,	// PMULLDrr
    135270939U,	// PMULLDrr_int
    1140854122U,	// PMULLWrm
    135269738U,	// PMULLWrr
    1140854130U,	// PMULUDQrm
    135269746U,	// PMULUDQrr
    941625891U,	// POP32r
    941625897U,	// POP64r
    4655U,	// POPFD
    4655U,	// POPFQ
    1140854139U,	// PORrm
    135269755U,	// PORrr
    1610617397U,	// PREFETCHNTA
    1610617410U,	// PREFETCHT0
    1610617422U,	// PREFETCHT1
    1610617434U,	// PREFETCHT2
    1140854144U,	// PSADBWrm
    135269760U,	// PSADBWrr
    1140855398U,	// PSHUFBrm128
    268440166U,	// PSHUFBrm64
    135271014U,	// PSHUFBrr128
    135271014U,	// PSHUFBrr64
    2106593902U,	// PSHUFDmi
    144708206U,	// PSHUFDri
    2106593910U,	// PSHUFHWmi
    144708214U,	// PSHUFHWri
    2106593919U,	// PSHUFLWmi
    144708223U,	// PSHUFLWri
    1140855432U,	// PSIGNBrm128
    268440200U,	// PSIGNBrm64
    135271048U,	// PSIGNBrr128
    135271048U,	// PSIGNBrr64
    1140855440U,	// PSIGNDrm128
    268440208U,	// PSIGNDrm64
    135271056U,	// PSIGNDrr128
    135271056U,	// PSIGNDrr64
    1140855448U,	// PSIGNWrm128
    268440216U,	// PSIGNWrm64
    135271064U,	// PSIGNWrr128
    135271064U,	// PSIGNWrr64
    135271072U,	// PSLLDQri
    135269776U,	// PSLLDri
    1140854160U,	// PSLLDrm
    135269776U,	// PSLLDrr
    135269783U,	// PSLLQri
    1140854167U,	// PSLLQrm
    135269783U,	// PSLLQrr
    135269790U,	// PSLLWri
    1140854174U,	// PSLLWrm
    135269790U,	// PSLLWrr
    135269797U,	// PSRADri
    1140854181U,	// PSRADrm
    135269797U,	// PSRADrr
    135269804U,	// PSRAWri
    1140854188U,	// PSRAWrm
    135269804U,	// PSRAWrr
    135271080U,	// PSRLDQri
    135269811U,	// PSRLDri
    1140854195U,	// PSRLDrm
    135269811U,	// PSRLDrr
    135269818U,	// PSRLQri
    1140854202U,	// PSRLQrm
    135269818U,	// PSRLQrr
    135269825U,	// PSRLWri
    1140854209U,	// PSRLWrm
    135269825U,	// PSRLWrr
    1140854216U,	// PSUBBrm
    135269832U,	// PSUBBrr
    1140854223U,	// PSUBDrm
    135269839U,	// PSUBDrr
    1140854230U,	// PSUBQrm
    135269846U,	// PSUBQrr
    1140854237U,	// PSUBSBrm
    135269853U,	// PSUBSBrr
    1140854245U,	// PSUBSWrm
    135269861U,	// PSUBSWrr
    1140854253U,	// PSUBUSBrm
    135269869U,	// PSUBUSBrr
    1140854262U,	// PSUBUSWrm
    135269878U,	// PSUBUSWrr
    1140854271U,	// PSUBWrm
    135269887U,	// PSUBWrr
    2214597296U,	// PTESTrm
    1275335344U,	// PTESTrr
    1140854278U,	// PUNPCKHBWrm
    135269894U,	// PUNPCKHBWrr
    1140854289U,	// PUNPCKHDQrm
    135269905U,	// PUNPCKHDQrr
    1140855480U,	// PUNPCKHQDQrm
    135271096U,	// PUNPCKHQDQrr
    1140854300U,	// PUNPCKHWDrm
    135269916U,	// PUNPCKHWDrr
    1140854311U,	// PUNPCKLBWrm
    135269927U,	// PUNPCKLBWrr
    1140854322U,	// PUNPCKLDQrm
    135269938U,	// PUNPCKLDQrr
    1140855492U,	// PUNPCKLQDQrm
    135271108U,	// PUNPCKLQDQrr
    1140854333U,	// PUNPCKLWDrm
    135269949U,	// PUNPCKLWDrr
    941626064U,	// PUSH32r
    941626071U,	// PUSH64r
    4830U,	// PUSHFD
    4830U,	// PUSHFQ
    1140852868U,	// PXORrm
    135268484U,	// PXORrr
    2147488485U,	// RCPPSm
    2147488485U,	// RCPPSm_Int
    1275335397U,	// RCPPSr
    1275335397U,	// RCPPSr_Int
    1946161900U,	// RCPSSm
    1946161900U,	// RCPSSm_Int
    1275335404U,	// RCPSSr
    1275335404U,	// RCPSSr_Int
    4851U,	// RDTSC
    4858U,	// REP_MOVSB
    4869U,	// REP_MOVSD
    4880U,	// REP_MOVSQ
    4891U,	// REP_MOVSW
    4902U,	// REP_STOSB
    4913U,	// REP_STOSD
    4924U,	// REP_STOSQ
    4935U,	// REP_STOSW
    4946U,	// RET
    941626199U,	// RETI
    805311324U,	// ROL16m1
    805311330U,	// ROL16mCL
    67244892U,	// ROL16mi
    941626204U,	// ROL16r1
    941626210U,	// ROL16rCL
    135271260U,	// ROL16ri
    874517357U,	// ROL32m1
    874517363U,	// ROL32mCL
    67113837U,	// ROL32mi
    941626221U,	// ROL32r1
    941626227U,	// ROL32rCL
    135271277U,	// ROL32ri
    1476399998U,	// ROL64m1
    1476400004U,	// ROL64mCL
    67179390U,	// ROL64mi
    941626238U,	// ROL64r1
    941626244U,	// ROL64rCL
    135271294U,	// ROL64ri
    1610617743U,	// ROL8m1
    1610617749U,	// ROL8mCL
    67310479U,	// ROL8mi
    941626255U,	// ROL8r1
    941626261U,	// ROL8rCL
    135271311U,	// ROL8ri
    805311392U,	// ROR16m1
    805311398U,	// ROR16mCL
    67244960U,	// ROR16mi
    941626272U,	// ROR16r1
    941626278U,	// ROR16rCL
    135271328U,	// ROR16ri
    874517425U,	// ROR32m1
    874517431U,	// ROR32mCL
    67113905U,	// ROR32mi
    941626289U,	// ROR32r1
    941626295U,	// ROR32rCL
    135271345U,	// ROR32ri
    1476400066U,	// ROR64m1
    1476400072U,	// ROR64mCL
    67179458U,	// ROR64mi
    941626306U,	// ROR64r1
    941626312U,	// ROR64rCL
    135271362U,	// ROR64ri
    1610617811U,	// ROR8m1
    1610617817U,	// ROR8mCL
    67310547U,	// ROR8mi
    941626323U,	// ROR8r1
    941626329U,	// ROR8rCL
    135271379U,	// ROR8ri
    2107642852U,	// ROUNDPDm_Int
    144708580U,	// ROUNDPDr_Int
    2107642861U,	// ROUNDPSm_Int
    144708589U,	// ROUNDPSr_Int
    1034949622U,	// ROUNDSDm_Int
    1073746934U,	// ROUNDSDr_Int
    1024463871U,	// ROUNDSSm_Int
    1073746943U,	// ROUNDSSr_Int
    2147488776U,	// RSQRTPSm
    2147488776U,	// RSQRTPSm_Int
    1275335688U,	// RSQRTPSr
    1275335688U,	// RSQRTPSr_Int
    1946162193U,	// RSQRTSSm
    1946162193U,	// RSQRTSSm_Int
    1275335697U,	// RSQRTSSr
    1275335697U,	// RSQRTSSr_Int
    5146U,	// SAHF
    805311520U,	// SAR16m1
    805311526U,	// SAR16mCL
    67245088U,	// SAR16mi
    941626400U,	// SAR16r1
    941626406U,	// SAR16rCL
    135271456U,	// SAR16ri
    874517553U,	// SAR32m1
    874517559U,	// SAR32mCL
    67114033U,	// SAR32mi
    941626417U,	// SAR32r1
    941626423U,	// SAR32rCL
    135271473U,	// SAR32ri
    1476400194U,	// SAR64m1
    1476400200U,	// SAR64mCL
    67179586U,	// SAR64mi
    941626434U,	// SAR64r1
    941626440U,	// SAR64rCL
    135271490U,	// SAR64ri
    1610617939U,	// SAR8m1
    1610617945U,	// SAR8mCL
    67310675U,	// SAR8mi
    941626451U,	// SAR8r1
    941626457U,	// SAR8rCL
    135271507U,	// SAR8ri
    67114084U,	// SBB32mi
    67114084U,	// SBB32mi8
    67114084U,	// SBB32mr
    135271524U,	// SBB32ri
    135271524U,	// SBB32ri8
    201331812U,	// SBB32rm
    135271524U,	// SBB32rr
    67179626U,	// SBB64mi32
    67179626U,	// SBB64mi8
    67179626U,	// SBB64mr
    135271530U,	// SBB64ri32
    135271530U,	// SBB64ri8
    268440682U,	// SBB64rm
    135271530U,	// SBB64rr
    67310704U,	// SBB8mi
    1610617974U,	// SETAEm
    941626486U,	// SETAEr
    1610617981U,	// SETAm
    941626493U,	// SETAr
    1610617987U,	// SETBEm
    941626499U,	// SETBEr
    1610617994U,	// SETBm
    941626506U,	// SETBr
    1610618000U,	// SETEm
    941626512U,	// SETEr
    1610618006U,	// SETGEm
    941626518U,	// SETGEr
    1610618013U,	// SETGm
    941626525U,	// SETGr
    1610618019U,	// SETLEm
    941626531U,	// SETLEr
    1610618026U,	// SETLm
    941626538U,	// SETLr
    1610618032U,	// SETNEm
    941626544U,	// SETNEr
    1610618039U,	// SETNOm
    941626551U,	// SETNOr
    1610618046U,	// SETNPm
    941626558U,	// SETNPr
    1610618053U,	// SETNSm
    941626565U,	// SETNSr
    1610618060U,	// SETOm
    941626572U,	// SETOr
    1610618066U,	// SETPm
    941626578U,	// SETPr
    1610618072U,	// SETSm
    941626584U,	// SETSr
    5342U,	// SFENCE
    805311718U,	// SHL16m1
    805311724U,	// SHL16mCL
    67245286U,	// SHL16mi
    941626604U,	// SHL16rCL
    135271654U,	// SHL16ri
    874517751U,	// SHL32m1
    874517757U,	// SHL32mCL
    67114231U,	// SHL32mi
    941626621U,	// SHL32rCL
    135271671U,	// SHL32ri
    1476400392U,	// SHL64m1
    1476400398U,	// SHL64mCL
    67179784U,	// SHL64mi
    941626638U,	// SHL64rCL
    135271688U,	// SHL64ri
    1610618137U,	// SHL8m1
    1610618143U,	// SHL8mCL
    67310873U,	// SHL8mi
    941626655U,	// SHL8rCL
    135271705U,	// SHL8ri
    67245354U,	// SHLD16mrCL
    2089948470U,	// SHLD16mri8
    135271722U,	// SHLD16rrCL
    1073747254U,	// SHLD16rri8
    67114301U,	// SHLD32mrCL
    2089817417U,	// SHLD32mri8
    135271741U,	// SHLD32rrCL
    1073747273U,	// SHLD32rri8
    67179856U,	// SHLD64mrCL
    2089882972U,	// SHLD64mri8
    135271760U,	// SHLD64rrCL
    1073747292U,	// SHLD64rri8
    805311843U,	// SHR16m1
    805311849U,	// SHR16mCL
    67245411U,	// SHR16mi
    941626723U,	// SHR16r1
    941626729U,	// SHR16rCL
    135271779U,	// SHR16ri
    874517876U,	// SHR32m1
    874517882U,	// SHR32mCL
    67114356U,	// SHR32mi
    941626740U,	// SHR32r1
    941626746U,	// SHR32rCL
    135271796U,	// SHR32ri
    1476400517U,	// SHR64m1
    1476400523U,	// SHR64mCL
    67179909U,	// SHR64mi
    941626757U,	// SHR64r1
    941626763U,	// SHR64rCL
    135271813U,	// SHR64ri
    1610618262U,	// SHR8m1
    1610618268U,	// SHR8mCL
    67310998U,	// SHR8mi
    941626774U,	// SHR8r1
    941626780U,	// SHR8rCL
    135271830U,	// SHR8ri
    67245479U,	// SHRD16mrCL
    2089948595U,	// SHRD16mri8
    135271847U,	// SHRD16rrCL
    1073747379U,	// SHRD16rri8
    67114426U,	// SHRD32mrCL
    2089817542U,	// SHRD32mri8
    135271866U,	// SHRD32rrCL
    1073747398U,	// SHRD32rri8
    67179981U,	// SHRD64mrCL
    2089883097U,	// SHRD64mri8
    135271885U,	// SHRD64rrCL
    1073747417U,	// SHRD64rri8
    1035998688U,	// SHUFPDrmi
    1073747424U,	// SHUFPDrri
    1035998696U,	// SHUFPSrmi
    1073747432U,	// SHUFPSrri
    5616U,	// SIN_F
    0U,	// SIN_Fp32
    0U,	// SIN_Fp64
    0U,	// SIN_Fp80
    2147489270U,	// SQRTPDm
    2147489270U,	// SQRTPDm_Int
    1275336182U,	// SQRTPDr
    1275336182U,	// SQRTPDr_Int
    2147489278U,	// SQRTPSm
    2147489278U,	// SQRTPSm_Int
    1275336190U,	// SQRTPSr
    1275336190U,	// SQRTPSr_Int
    1879053830U,	// SQRTSDm
    1879053830U,	// SQRTSDm_Int
    1275336198U,	// SQRTSDr
    1275336198U,	// SQRTSDr_Int
    1946162702U,	// SQRTSSm
    1946162702U,	// SQRTSSm_Int
    1275336206U,	// SQRTSSr
    1275336206U,	// SQRTSSr_Int
    5654U,	// SQRT_F
    0U,	// SQRT_Fp32
    0U,	// SQRT_Fp64
    0U,	// SQRT_Fp80
    874518045U,	// STMXCSR
    671094310U,	// ST_F32m
    738203180U,	// ST_F64m
    671094322U,	// ST_FP32m
    738203193U,	// ST_FP64m
    2281707072U,	// ST_FP80m
    941626951U,	// ST_FPrr
    0U,	// ST_Fp32m
    0U,	// ST_Fp64m
    0U,	// ST_Fp64m32
    0U,	// ST_Fp80m32
    0U,	// ST_Fp80m64
    0U,	// ST_FpP32m
    0U,	// ST_FpP64m
    0U,	// ST_FpP64m32
    0U,	// ST_FpP80m
    0U,	// ST_FpP80m32
    0U,	// ST_FpP80m64
    941626957U,	// ST_Frr
    67245650U,	// SUB16mi
    67245650U,	// SUB16mi8
    67245650U,	// SUB16mr
    135272018U,	// SUB16ri
    135272018U,	// SUB16ri8
    335550034U,	// SUB16rm
    135272018U,	// SUB16rr
    67114584U,	// SUB32mi
    67114584U,	// SUB32mi8
    67114584U,	// SUB32mr
    135272024U,	// SUB32ri
    135272024U,	// SUB32ri8
    201332312U,	// SUB32rm
    135272024U,	// SUB32rr
    67180126U,	// SUB64mi32
    67180126U,	// SUB64mi8
    67180126U,	// SUB64mr
    135272030U,	// SUB64ri32
    135272030U,	// SUB64ri8
    268441182U,	// SUB64rm
    135272030U,	// SUB64rr
    67311204U,	// SUB8mi
    67311204U,	// SUB8mr
    135272036U,	// SUB8ri
    402658916U,	// SUB8rm
    135272036U,	// SUB8rr
    469767786U,	// SUBPDrm
    135272042U,	// SUBPDrr
    469767793U,	// SUBPSrm
    135272049U,	// SUBPSrr
    671094392U,	// SUBR_F32m
    738203264U,	// SUBR_F64m
    805312136U,	// SUBR_FI16m
    874518161U,	// SUBR_FI32m
    941627034U,	// SUBR_FPrST0
    941627041U,	// SUBR_FST0r
    0U,	// SUBR_Fp32m
    0U,	// SUBR_Fp64m
    0U,	// SUBR_Fp64m32
    0U,	// SUBR_Fp80m32
    0U,	// SUBR_Fp80m64
    0U,	// SUBR_FpI16m32
    0U,	// SUBR_FpI16m64
    0U,	// SUBR_FpI16m80
    0U,	// SUBR_FpI32m32
    0U,	// SUBR_FpI32m64
    0U,	// SUBR_FpI32m80
    941627048U,	// SUBR_FrST0
    536876726U,	// SUBSDrm
    536876726U,	// SUBSDrm_Int
    135272118U,	// SUBSDrr
    135272118U,	// SUBSDrr_Int
    603985597U,	// SUBSSrm
    603985597U,	// SUBSSrm_Int
    135272125U,	// SUBSSrr
    135272125U,	// SUBSSrr_Int
    671094468U,	// SUB_F32m
    738203339U,	// SUB_F64m
    805312210U,	// SUB_FI16m
    874518234U,	// SUB_FI32m
    941627106U,	// SUB_FPrST0
    941627114U,	// SUB_FST0r
    0U,	// SUB_Fp32
    0U,	// SUB_Fp32m
    0U,	// SUB_Fp64
    0U,	// SUB_Fp64m
    0U,	// SUB_Fp64m32
    0U,	// SUB_Fp80
    0U,	// SUB_Fp80m32
    0U,	// SUB_Fp80m64
    0U,	// SUB_FpI16m32
    0U,	// SUB_FpI16m64
    0U,	// SUB_FpI16m80
    0U,	// SUB_FpI32m32
    0U,	// SUB_FpI32m64
    0U,	// SUB_FpI32m80
    941627120U,	// SUB_FrST0
    5887U,	// TAILCALL
    1573915343U,	// TAILJMPd
    902829834U,	// TAILJMPm
    969935572U,	// TAILJMPr
    969935579U,	// TAILJMPr64
    970987280U,	// TCRETURNdi
    970987280U,	// TCRETURNdi64
    970987280U,	// TCRETURNri
    970987280U,	// TCRETURNri64
    67245852U,	// TEST16mi
    1275336476U,	// TEST16ri
    1209014044U,	// TEST16rm
    1275336476U,	// TEST16rr
    67114787U,	// TEST32mi
    1275336483U,	// TEST32ri
    1343231779U,	// TEST32rm
    1275336483U,	// TEST32rr
    67180330U,	// TEST64mi32
    1275336490U,	// TEST64ri32
    1409292074U,	// TEST64rm
    1275336490U,	// TEST64rr
    67311409U,	// TEST8mi
    1275336497U,	// TEST8ri
    1678776113U,	// TEST8rm
    1275336497U,	// TEST8rr
    2582645650U,	// TLS_addr32
    2583697208U,	// TLS_addr64
    2550401204U,	// TLS_gs_ri
    1309677386U,	// TLS_gs_rr
    941627221U,	// TLS_tp
    5986U,	// TRAP
    5991U,	// TST_F
    0U,	// TST_Fp32
    0U,	// TST_Fp64
    0U,	// TST_Fp80
    1879050901U,	// UCOMISDrm
    1275333269U,	// UCOMISDrr
    1946159774U,	// UCOMISSrm
    1275333278U,	// UCOMISSrr
    943724397U,	// UCOM_FIPr
    943724406U,	// UCOM_FIr
    6014U,	// UCOM_FPPr
    941627271U,	// UCOM_FPr
    0U,	// UCOM_FpIr32
    0U,	// UCOM_FpIr64
    0U,	// UCOM_FpIr80
    0U,	// UCOM_Fpr32
    0U,	// UCOM_Fpr64
    0U,	// UCOM_Fpr80
    941627279U,	// UCOM_Fr
    469768086U,	// UNPCKHPDrm
    135272342U,	// UNPCKHPDrr
    469768096U,	// UNPCKHPSrm
    135272352U,	// UNPCKHPSrr
    469768106U,	// UNPCKLPDrm
    135272362U,	// UNPCKLPDrr
    469768116U,	// UNPCKLPSrm
    135272372U,	// UNPCKLPSrr
    939788461U,	// V_SET0
    939789545U,	// V_SETALLONES
    2092636094U,	// XCHG16rm
    2093684677U,	// XCHG32rm
    2094733260U,	// XCHG64rm
    2100303826U,	// XCHG8rm
    941627353U,	// XCH_F
    67246047U,	// XOR16mi
    67246047U,	// XOR16mi8
    67246047U,	// XOR16mr
    135272415U,	// XOR16ri
    135272415U,	// XOR16ri8
    335550431U,	// XOR16rm
    135272415U,	// XOR16rr
    67112535U,	// XOR32mi
    67112535U,	// XOR32mi8
    67112535U,	// XOR32mr
    135269975U,	// XOR32ri
    135269975U,	// XOR32ri8
    201330263U,	// XOR32rm
    135269975U,	// XOR32rr
    67180517U,	// XOR64mi32
    67180517U,	// XOR64mi8
    67180517U,	// XOR64mr
    135272421U,	// XOR64ri32
    135272421U,	// XOR64ri8
    268441573U,	// XOR64rm
    135272421U,	// XOR64rr
    67309180U,	// XOR8mi
    67309180U,	// XOR8mr
    135270012U,	// XOR8ri
    402656892U,	// XOR8rm
    135270012U,	// XOR8rr
    469764262U,	// XORPDrm
    135268518U,	// XORPDrr
    469764269U,	// XORPSrm
    135268525U,	// XORPSrr
    0U
  };

  const char *AsmStrs = 
    "\000\000PHINODE\n\000fabs\n\000adcl\t\000adcq\t\000addw\t\000addl\t\000"
    "addq\t\000addb\t\000addpd\t\000addps\t\000addsd\t\000addss\t\000addsubp"
    "d\t\000addsubps\t\000fadds\t\000faddl\t\000fiadds\t\000fiaddl\t\000fadd"
    "p\t\000fadd\t\000fadd\t%st(0), \000#ADJCALLSTACKDOWN\n\000#ADJCALLSTACK"
    "UP\n\000andw\t\000andl\t\000andq\t\000andb\t\000andnpd\t\000andnps\t\000"
    "andpd\t\000andps\t\000#ATOMADD6432 PSEUDO!\n\000#ATOMAND16 PSEUDO!\n\000"
    "#ATOMAND32 PSEUDO!\n\000#ATOMAND64 PSEUDO!\n\000#ATOMAND6432 PSEUDO!\n\000"
    "#ATOMAND8 PSEUDO!\n\000#ATOMMAX16 PSEUDO!\n\000#ATOMMAX32 PSEUDO!\n\000"
    "#ATOMMAX64 PSEUDO!\n\000#ATOMMIN16 PSEUDO!\n\000#ATOMMIN32 PSEUDO!\n\000"
    "#ATOMMIN64 PSEUDO!\n\000#ATOMNAND16 PSEUDO!\n\000#ATOMNAND32 PSEUDO!\n\000"
    "#ATOMNAND64 PSEUDO!\n\000#ATOMNAND6432 PSEUDO!\n\000#ATOMNAND8 PSEUDO!\n"
    "\000#ATOMOR16 PSEUDO!\n\000#ATOMOR32 PSEUDO!\n\000#ATOMOR64 PSEUDO!\n\000"
    "#ATOMOR6432 PSEUDO!\n\000#ATOMOR8 PSEUDO!\n\000#ATOMSUB6432 PSEUDO!\n\000"
    "#ATOMSWAP6432 PSEUDO!\n\000#ATOMUMAX16 PSEUDO!\n\000#ATOMUMAX32 PSEUDO!"
    "\n\000#ATOMUMAX64 PSEUDO!\n\000#ATOMUMIN16 PSEUDO!\n\000#ATOMUMIN32 PSE"
    "UDO!\n\000#ATOMUMIN64 PSEUDO!\n\000#ATOMXOR16 PSEUDO!\n\000#ATOMXOR32 P"
    "SEUDO!\n\000#ATOMXOR64 PSEUDO!\n\000#ATOMXOR6432 PSEUDO!\n\000#ATOMXOR8"
    " PSEUDO!\n\000blendpd\t\000blendps\t\000blendvpd\t%xmm0, \000blendvps\t"
    "%xmm0, \000bsfw\t\000bsfl\t\000bsfq\t\000bsrw\t\000bsrl\t\000bsrq\t\000"
    "bswapl\t\000bswapq\t\000btw\t\000btl\t\000btq\t\000call\t*\000call\t\000"
    "cbtw\n\000cltd\n\000cltq\n\000fchs\n\000clflush\t\000cmova\t\000cmovae\t"
    "\000cmovb\t\000cmovbe\t\000fcmovbe\t\000fcmovb\t\000cmove\t\000fcmove\t"
    "\000cmovg\t\000cmovge\t\000cmovl\t\000cmovle\t\000fcmovnbe\t\000fcmovnb"
    "\t\000cmovne\t\000fcmovne\t\000cmovno\t\000cmovnp\t\000fcmovnu\t\000cmo"
    "vns\t\000cmovo\t\000cmovp\t\000fcmovu\t \000cmovs\t\000#CMOV_FR32 PSEUD"
    "O!\n\000#CMOV_FR64 PSEUDO!\n\000#CMOV_V1I64 PSEUDO!\n\000#CMOV_V2F64 PS"
    "EUDO!\n\000#CMOV_V2I64 PSEUDO!\n\000#CMOV_V4F32 PSEUDO!\n\000cmpw\t\000"
    "cmpl\t\000cmpq\t\000cmpb\t\000cmp\000fcos\n\000cqto\n\000cvtsd2ss\t\000"
    "cvtsi2sdq\t\000cvtsi2sd\t\000cvtsi2ssq\t\000cvtsi2ss\t\000cvtss2sd\t\000"
    "cvttsd2siq\t\000cvttsd2si\t\000cvttss2siq\t\000cvttss2si\t\000cwtd\n\000"
    "cwtl\n\000decw\t\000decl\t\000decq\t\000decb\t\000divw\t\000divl\t\000d"
    "ivq\t\000divb\t\000divpd\t\000divps\t\000fdivrs\t\000fdivrl\t\000fidivr"
    "s\t\000fidivrl\t\000fdivp\t\000fdivr\t\000fdiv\t%st(0), \000divsd\t\000"
    "divss\t\000fdivs\t\000fdivl\t\000fidivs\t\000fidivl\t\000fdivrp\t\000fd"
    "iv\t\000fdivr\t%st(0), \000dppd\t\000dpps\t\000.loc\t\000ret\t#eh_retur"
    "n, addr: \000extractps\t\000fldcw\t\000fnstcw\t\000fnstsw\n\000##FP32_T"
    "O_INT16_IN_MEM PSEUDO!\n\000##FP32_TO_INT32_IN_MEM PSEUDO!\n\000##FP32_"
    "TO_INT64_IN_MEM PSEUDO!\n\000##FP64_TO_INT16_IN_MEM PSEUDO!\n\000##FP64"
    "_TO_INT32_IN_MEM PSEUDO!\n\000##FP64_TO_INT64_IN_MEM PSEUDO!\n\000##FP8"
    "0_TO_INT16_IN_MEM PSEUDO!\n\000##FP80_TO_INT32_IN_MEM PSEUDO!\n\000##FP"
    "80_TO_INT64_IN_MEM PSEUDO!\n\000##FP_REG_KILL\n\000pxor\t\000movapd\t\000"
    "movaps\t\000orpd\t\000orps\t\000xorpd\t\000xorps\t\000movl\t%gs:\000had"
    "dpd\t\000haddps\t\000hsubpd\t\000hsubps\t\000idivw\t\000idivl\t\000idiv"
    "q\t\000idivb\t\000filds\t\000fildl\t\000fildll\t\000imulw\t\000imull\t\000"
    "imulq\t\000imulb\t\000inw\t\000inw\t%dx, %ax\n\000inl\t\000inl\t%dx, %e"
    "ax\n\000inb\t\000inb\t%dx, %al\n\000incw\t\000incl\t\000incq\t\000incb\t"
    "\000insertps\t\000fisttps\t\000fisttpl\t\000fisttpll\t\000fists\t\000fi"
    "stl\t\000fistps\t\000fistpl\t\000fistpll\t\000comisd\t\000comiss\t\000c"
    "vtdq2pd\t\000cvtdq2ps\t\000cvtpd2dq\t\000cvtpd2pi\t\000cvtpd2ps\t\000cv"
    "tpi2pd\t\000cvtpi2ps\t\000cvtps2dq\t\000cvtps2pd\t\000cvtps2pi\t\000cvt"
    "sd2siq\t\000cvtsd2si\t\000cvtss2siq\t\000cvtss2si\t\000cvttpd2dq\t\000c"
    "vttpd2pi\t\000cvttps2dq\t\000cvttps2pi\t\000ucomisd\t\000ucomiss\t\000j"
    "a\t\000jae\t\000jb\t\000jbe\t\000je\t\000jg\t\000jge\t\000jl\t\000jle\t"
    "\000jmp\t\000jmpl\t*\000jmpq\t*\000jne\t\000jno\t\000jnp\t\000jns\t\000"
    "jo\t\000jp\t\000js\t\000lahf\n\000lock\n\tcmpxchgw\t\000lock\n\tcmpxchg"
    "l\t\000lock\n\tcmpxchgq\t\000lock\n\tcmpxchgb\t\000lock\n\tcmpxchg8b\t\000"
    "lddqu\t\000ldmxcsr\t\000fldz\n\000fld1\n\000flds\t\000fldl\t\000fldt\t\000"
    "fld\t\000leaw\t\000leal\t\000leaq\t\000leave\n\000lfence\n\000lock\n\tx"
    "addw\t\000lock\n\txaddl\t\000lock\n\txadd\t\000lock\n\txaddb\t\000maskm"
    "ovdqu\t\000maxpd\t\000maxps\t\000maxsd\t\000maxss\t\000mfence\n\000minp"
    "d\t\000minps\t\000minsd\t\000minss\t\000emms\n\000femms\n\000maskmovq\t"
    "\000movd\t\000movdq2q\t\000movntq\t\000movq2dq\t\000movq\t\000packssdw\t"
    "\000packsswb\t\000packuswb\t\000paddb\t\000paddd\t\000paddq\t\000paddsb"
    "\t\000paddsw\t\000paddusb\t\000paddusw\t\000paddw\t\000pandn\t\000pand\t"
    "\000pavgb\t\000pavgw\t\000pcmpeqb\t\000pcmpeqd\t\000pcmpeqw\t\000pcmpgt"
    "b\t\000pcmpgtd\t\000pcmpgtw\t\000pextrw\t\000pinsrw\t\000pmaddwd\t\000p"
    "maxsw\t\000pmaxub\t\000pminsw\t\000pminub\t\000pmovmskb\t\000pmulhuw\t\000"
    "pmulhw\t\000pmullw\t\000pmuludq\t\000por\t\000psadbw\t\000pshufw\t\000p"
    "slld\t\000psllq\t\000psllw\t\000psrad\t\000psraw\t\000psrld\t\000psrlq\t"
    "\000psrlw\t\000psubb\t\000psubd\t\000psubq\t\000psubsb\t\000psubsw\t\000"
    "psubusb\t\000psubusw\t\000psubw\t\000punpckhbw\t\000punpckhdq\t\000punp"
    "ckhwd\t\000punpcklbw\t\000punpckldq\t\000punpcklwd\t\000monitor\n\000mo"
    "vw\t\000xorl\t\000movl\t\000movq\t%gs:\000movabsq\t\000movb\t\000xorb\t"
    "\000movddup\t\000movdqa\t\000movdqu\t\000movhlps\t\000movhpd\t\000movhp"
    "s\t\000movlhps\t\000movlpd\t\000movsd\t\000movlps\t\000movss\t\000movms"
    "kpd\t\000movmskps\t\000movntdqa\t\000movntdq\t\000movnti\t\000movntpd\t"
    "\000movntps\t\000movshdup\t\000movsldup\t\000movsbl\t\000movswl\t\000mo"
    "vswq\t\000movslq\t\000movsbq\t\000movupd\t\000movups\t\000movzbl\t\000m"
    "ovzwl\t\000mpsadbw\t\000mulw\t\000mull\t\000mulq\t\000mulb\t\000mulpd\t"
    "\000mulps\t\000mulsd\t\000mulss\t\000fmuls\t\000fmull\t\000fimuls\t\000"
    "fimull\t\000fmulp\t\000fmul\t\000fmul\t%st(0), \000mwait\n\000negw\t\000"
    "negl\t\000negq\t\000negb\t\000nop\n\000notw\t\000notl\t\000notq\t\000no"
    "tb\t\000orw\t\000orl\t\000orq\t\000orb\t\000outw\t%ax, \000outw\t%ax, %"
    "dx\n\000outl\t%eax, \000outl\t%eax, %dx\n\000outb\t%al, \000outb\t%al, "
    "%dx\n\000pabsb\t\000pabsd\t\000pabsw\t\000packusdw\t\000palignr\t\000pb"
    "lendvb\t%xmm0, \000pblendw\t\000pcmpeqq\t\000pcmpgtq\t\000pextrb\t\000p"
    "extrd\t\000pextrq\t\000phaddd\t\000phaddsw\t\000phaddw\t\000phminposuw\t"
    "\000phsubd\t\000phsubsw\t\000phsubw\t\000pinsrb\t\000pinsrd\t\000pinsrq"
    "\t\000pmaddubsw\t\000pmaxsb\t\000pmaxsd\t\000pmaxud\t\000pmaxuw\t\000pm"
    "insb\t\000pminsd\t\000pminud\t\000pminuw\t\000pmovsxbd\t\000pmovsxbq\t\000"
    "pmovsxbw\t\000pmovsxdq\t\000pmovsxwd\t\000pmovsxwq\t\000pmovzxbd\t\000p"
    "movzxbw\t\000pmovzxdq\t\000pmovzxwd\t\000pmovzxwq\t\000pmuldq\t\000pmul"
    "hrsw\t\000pmulld\t\000popl\t\000popq\t\000popf\n\000prefetchnta\t\000pr"
    "efetcht0\t\000prefetcht1\t\000prefetcht2\t\000pshufb\t\000pshufd\t\000p"
    "shufhw\t\000pshuflw\t\000psignb\t\000psignd\t\000psignw\t\000pslldq\t\000"
    "psrldq\t\000ptest \t\000punpckhqdq\t\000punpcklqdq\t\000pushl\t\000push"
    "q\t\000pushf\n\000rcpps\t\000rcpss\t\000rdtsc\n\000rep;movsb\n\000rep;m"
    "ovsl\n\000rep;movsq\n\000rep;movsw\n\000rep;stosb\n\000rep;stosl\n\000r"
    "ep;stosq\n\000rep;stosw\n\000ret\n\000ret\t\000rolw\t\000rolw\t%cl, \000"
    "roll\t\000roll\t%cl, \000rolq\t\000rolq\t%cl, \000rolb\t\000rolb\t%cl, "
    "\000rorw\t\000rorw\t%cl, \000rorl\t\000rorl\t%cl, \000rorq\t\000rorq\t%"
    "cl, \000rorb\t\000rorb\t%cl, \000roundpd\t\000roundps\t\000roundsd\t\000"
    "roundss\t\000rsqrtps\t\000rsqrtss\t\000sahf\n\000sarw\t\000sarw\t%cl, \000"
    "sarl\t\000sarl\t%cl, \000sarq\t\000sarq\t%cl, \000sarb\t\000sarb\t%cl, "
    "\000sbbl\t\000sbbq\t\000sbbb\t\000setae\t\000seta\t\000setbe\t\000setb\t"
    "\000sete\t\000setge\t\000setg\t\000setle\t\000setl\t\000setne\t\000setn"
    "o\t\000setnp\t\000setns\t\000seto\t\000setp\t\000sets\t\000sfence\n\000"
    "shlw\t\000shlw\t%cl, \000shll\t\000shll\t%cl, \000shlq\t\000shlq\t%cl, "
    "\000shlb\t\000shlb\t%cl, \000shldw\t%cl, \000shldw\t\000shldl\t%cl, \000"
    "shldl\t\000shldq\t%cl, \000shldq\t\000shrw\t\000shrw\t%cl, \000shrl\t\000"
    "shrl\t%cl, \000shrq\t\000shrq\t%cl, \000shrb\t\000shrb\t%cl, \000shrdw\t"
    "%cl, \000shrdw\t\000shrdl\t%cl, \000shrdl\t\000shrdq\t%cl, \000shrdq\t\000"
    "shufpd\t\000shufps\t\000fsin\n\000sqrtpd\t\000sqrtps\t\000sqrtsd\t\000s"
    "qrtss\t\000fsqrt\n\000stmxcsr\t\000fsts\t\000fstl\t\000fstps\t\000fstpl"
    "\t\000fstpt\t\000fstp\t\000fst\t\000subw\t\000subl\t\000subq\t\000subb\t"
    "\000subpd\t\000subps\t\000fsubrs\t\000fsubrl\t\000fisubrs\t\000fisubrl\t"
    "\000fsubp\t\000fsubr\t\000fsub\t%st(0), \000subsd\t\000subss\t\000fsubs"
    "\t\000fsubl\t\000fisubs\t\000fisubl\t\000fsubrp\t\000fsub\t\000fsubr\t%"
    "st(0), \000#TAILCALL\n\000jmp\t*\000#TC_RETURN \000testw\t\000testl\t\000"
    "testq\t\000testb\t\000.byte\t0x66; leaq\t\000movl\t%gs:(\000movl\t%gs:0"
    ", \000ud2\n\000ftst\n\000fucomip\t\000fucomi\t\000fucompp\n\000fucomp\t"
    "\000fucom\t\000unpckhpd\t\000unpckhps\t\000unpcklpd\t\000unpcklps\t\000"
    "xchgw\t\000xchgl\t\000xchg\t\000xchgb\t\000fxch\t\000xorw\t\000xorq\t\000";

  if (MI->getOpcode() == TargetInstrInfo::INLINEASM) {
    O << "\t";
    printInlineAsm(MI);
    return true;
  } else if (MI->isLabel()) {
    printLabel(MI);
    return true;
  } else if (MI->getOpcode() == TargetInstrInfo::DECLARE) {
    printDeclare(MI);
    return true;
  } else if (MI->getOpcode() == TargetInstrInfo::IMPLICIT_DEF) {
    printImplicitDef(MI);
    return true;
  }

  O << "\t";

  // Emit the opcode for the instruction.
  unsigned Bits = OpInfo[MI->getOpcode()];
  if (Bits == 0) return false;
  O << AsmStrs+(Bits & 8191);


  // Fragment 0 encoded into 6 bits for 39 unique commands.
  switch ((Bits >> 26) & 63) {
  default:   // unreachable.
  case 0:
    return true;
    break;
  case 1:
    // ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC64mi8, ADC64mr, ADD16mi, ADD...
    printOperand(MI, 4); 
    break;
  case 2:
    // ADC32ri, ADC32ri8, ADC32rr, ADC64ri32, ADC64ri8, ADC64rr, ADD16ri, ADD...
    printOperand(MI, 2); 
    O << ", "; 
    break;
  case 3:
    // ADC32rm, ADD32rm, AND32rm, CMOVA32rm, CMOVAE32rm, CMOVB32rm, CMOVBE32r...
    printi32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 4:
    // ADC64rm, ADD64rm, AND64rm, CMOVA64rm, CMOVAE64rm, CMOVB64rm, CMOVBE64r...
    printi64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 5:
    // ADD16rm, AND16rm, CMOVA16rm, CMOVAE16rm, CMOVB16rm, CMOVBE16rm, CMOVE1...
    printi16mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 6:
    // ADD8rm, AND8rm, OR8rm, SUB8rm, XOR8rm
    printi8mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 7:
    // ADDPDrm, ADDPSrm, ADDSUBPDrm, ADDSUBPSrm, ANDNPDrm, ANDNPSrm, ANDPDrm,...
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 8:
    // ADDSDrm, ADDSDrm_Int, DIVSDrm, DIVSDrm_Int, Int_CVTSD2SSrm, MAXSDrm, M...
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 9:
    // ADDSSrm, ADDSSrm_Int, DIVSSrm, DIVSSrm_Int, Int_CVTSS2SDrm, MAXSSrm, M...
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 10:
    // ADD_F32m, DIVR_F32m, DIV_F32m, LD_F32m, MUL_F32m, ST_F32m, ST_FP32m, S...
    printf32mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 11:
    // ADD_F64m, DIVR_F64m, DIV_F64m, LD_F64m, MUL_F64m, ST_F64m, ST_FP64m, S...
    printf64mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 12:
    // ADD_FI16m, DEC16m, DEC64_16m, DIV16m, DIVR_FI16m, DIV_FI16m, FLDCW16m,...
    printi16mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 13:
    // ADD_FI32m, CALL32m, DEC32m, DEC64_32m, DIV32m, DIVR_FI32m, DIV_FI32m, ...
    printi32mem(MI, 0); 
    break;
  case 14:
    // ADD_FPrST0, ADD_FST0r, ADD_FrST0, BSWAP32r, BSWAP64r, CALL32r, CALL64r...
    printOperand(MI, 0); 
    break;
  case 15:
    // BLENDPDrmi, BLENDPSrmi, DPPDrmi, DPPSrmi, INSERTPSrm, MMX_PINSRWrmi, M...
    printOperand(MI, 6); 
    O << ", "; 
    break;
  case 16:
    // BLENDPDrri, BLENDPSrri, DPPDrri, DPPSrri, INSERTPSrr, MMX_PINSRWrri, M...
    printOperand(MI, 3); 
    O << ", "; 
    printOperand(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 17:
    // BLENDVPDrm0, BLENDVPSrm0, PACKSSDWrm, PACKSSWBrm, PACKUSDWrm, PACKUSWB...
    printi128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 18:
    // BSF16rm, BSR16rm, CMP16rm, MOV16_rm, MOV16rm, MOVSX32rm16, MOVSX64rm16...
    printi16mem(MI, 1); 
    O << ", "; 
    break;
  case 19:
    // BSF16rr, BSF32rr, BSF64rr, BSR16rr, BSR32rr, BSR64rr, BT16ri8, BT16rr,...
    printOperand(MI, 1); 
    break;
  case 20:
    // BSF32rm, BSR32rm, CMP32rm, CVTSI2SDrm, CVTSI2SSrm, GS_MOV32rm, LEA16r,...
    printi32mem(MI, 1); 
    O << ", "; 
    break;
  case 21:
    // BSF64rm, BSR64rm, CMP64rm, CVTSI2SD64rm, CVTSI2SS64rm, Int_CVTDQ2PDrm,...
    printi64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 22:
    // CALL64m, DEC64m, DIV64m, IDIV64m, ILD_F64m, IMUL64m, INC64m, ISTT_FP64...
    printi64mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 23:
    // CALL64pcrel32, CALLpcrel32, TAILJMPd
    printOperand(MI, 0, "call"); 
    break;
  case 24:
    // CLFLUSH, DEC8m, DIV8m, IDIV8m, IMUL8m, INC8m, MUL8m, NEG8m, NOT8m, PRE...
    printi8mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 25:
    // CMP8rm, MOV8rm, MOVSX16rm8, MOVSX32rm8, MOVSX64rm8, MOVZX16rm8, MOVZX3...
    printi8mem(MI, 1); 
    O << ", "; 
    break;
  case 26:
    // CMPPDrmi, CMPPSrmi, CMPSDrm, CMPSSrm, Int_CMPSDrm, Int_CMPSSrm
    printSSECC(MI, 6); 
    break;
  case 27:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr
    printSSECC(MI, 3); 
    break;
  case 28:
    // CVTSD2SSrm, CVTTSD2SI64rm, CVTTSD2SIrm, Int_CVTPS2PDrm, Int_CVTPS2PIrm...
    printf64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 29:
    // CVTSS2SDrm, CVTTSS2SI64rm, CVTTSS2SIrm, Int_CVTSS2SI64rm, Int_CVTSS2SI...
    printf32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 30:
    // DWARF_LOC
    printOperand(MI, 2, "debug"); 
    O << " "; 
    printOperand(MI, 0, "debug"); 
    O << " "; 
    printOperand(MI, 1, "debug"); 
    O << "\n"; 
    return true;
    break;
  case 31:
    // EXTRACTPSmr, IMUL16rmi, IMUL16rmi8, IMUL32rmi, IMUL32rmi8, IMUL64rmi32...
    printOperand(MI, 5); 
    O << ", "; 
    break;
  case 32:
    // FsMOVAPDrm, FsMOVAPSrm, Int_COMISDrm, Int_COMISSrm, Int_CVTPD2DQrm, In...
    printf128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 33:
    // Int_CVTDQ2PSrm, LDDQUrm, MOVDQArm, MOVDQUrm, MOVDQUrm_Int, MOVNTDQArm,...
    printi128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 34:
    // LD_F80m, ST_FP80m
    printf80mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 35:
    // LEA64_32r
    printlea64_32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 36:
    // MOV16r0, MOV64r0
    printOperand(MI, 0, "subreg32"); 
    O << ", "; 
    printOperand(MI, 0, "subreg32"); 
    O << "\n"; 
    return true;
    break;
  case 37:
    // MOVPC32r
    printPICLabel(MI, 1); 
    O << "\n\tpopl\t"; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 38:
    // TLS_addr32, TLS_addr64, TLS_gs_ri
    printOperand(MI, 1, "mem"); 
    break;
  }


  // Fragment 1 encoded into 6 bits for 34 unique commands.
  switch ((Bits >> 20) & 63) {
  default:   // unreachable.
  case 0:
    // ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC64mi8, ADC64mr, ADD16mi, ADD...
    O << ", "; 
    break;
  case 1:
    // ADC32ri, ADC32ri8, ADC32rr, ADC64ri32, ADC64ri8, ADC64rr, ADD16ri, ADD...
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 2:
    // ADD_FI32m, ADD_FPrST0, ADD_FST0r, ADD_FrST0, BSWAP32r, BSWAP64r, CALL3...
    O << "\n"; 
    return true;
    break;
  case 3:
    // BLENDPDrmi, BLENDPSrmi, DPPDrmi, DPPSrmi, MPSADBWrmi, PALIGNR128rm, PB...
    printi128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 4:
    // CMOVBE_F, CMOVB_F, CMOVE_F, CMOVNBE_F, CMOVNB_F, CMOVNE_F, CMOVNP_F, C...
    O << ", %st(0)\n"; 
    return true;
    break;
  case 5:
    // CMPPDrmi, CMPPDrri
    O << "pd\t"; 
    break;
  case 6:
    // CMPPSrmi, CMPPSrri
    O << "ps\t"; 
    break;
  case 7:
    // CMPSDrm, CMPSDrr, Int_CMPSDrm, Int_CMPSDrr
    O << "sd\t"; 
    break;
  case 8:
    // CMPSSrm, CMPSSrr, Int_CMPSSrm, Int_CMPSSrr
    O << "ss\t"; 
    break;
  case 9:
    // EXTRACTPSmr, PEXTRBmr, PEXTRDmr, PEXTRQmr, PEXTRWmr, SHLD16mri8, SHLD3...
    printOperand(MI, 4); 
    O << ", "; 
    break;
  case 10:
    // EXTRACTPSrr, IMUL16rri, IMUL16rri8, IMUL32rri, IMUL32rri8, IMUL64rri32...
    printOperand(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 11:
    // IMUL16rmi, IMUL16rmi8, LXADD16, XCHG16rm
    printi16mem(MI, 1); 
    break;
  case 12:
    // IMUL32rmi, IMUL32rmi8, LXADD32, XCHG32rm
    printi32mem(MI, 1); 
    break;
  case 13:
    // IMUL64rmi32, IMUL64rmi8, LXADD64, MMX_PSHUFWmi, XCHG64rm
    printi64mem(MI, 1); 
    break;
  case 14:
    // IN16ri
    O << ", %ax\n"; 
    return true;
    break;
  case 15:
    // IN32ri
    O << ", %eax\n"; 
    return true;
    break;
  case 16:
    // IN8ri
    O << ", %al\n"; 
    return true;
    break;
  case 17:
    // INSERTPSrm, ROUNDSSm_Int
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 18:
    // LCMPXCHG64
    O << ","; 
    printi64mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 19:
    // LXADD8, XCHG8rm
    printi8mem(MI, 1); 
    O << "\n"; 
    return true;
    break;
  case 20:
    // MMX_PINSRWrmi, PINSRWrmi
    printi16mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 21:
    // MOVSX16rm8, MOVZX16rm8, MOVZX64rm16, MOVZX64rm32, MOVZX64rm8
    printOperand(MI, 0, "subreg32"); 
    O << "\n"; 
    return true;
    break;
  case 22:
    // PALIGNR64rm, PINSRQrm
    printi64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 23:
    // PINSRBrm
    printi8mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 24:
    // PINSRDrm
    printi32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 25:
    // PSHUFDmi, PSHUFHWmi, PSHUFLWmi
    printi128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 26:
    // ROUNDPDm_Int, ROUNDPSm_Int
    printf128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 27:
    // ROUNDSDm_Int
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 28:
    // SHUFPDrmi, SHUFPSrmi
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 29:
    // TAILJMPd, TAILJMPm, TAILJMPr, TAILJMPr64
    O << "  # TAILCALL\n"; 
    return true;
    break;
  case 30:
    // TCRETURNdi, TCRETURNdi64, TCRETURNri, TCRETURNri64
    O << " "; 
    printOperand(MI, 1); 
    O << "\n"; 
    return true;
    break;
  case 31:
    // TLS_addr32
    O << "(,%ebx,1), "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 32:
    // TLS_addr64
    O << "(%rip), "; 
    printOperand(MI, 0); 
    O << "; .word\t0x6666; rex64\n"; 
    return true;
    break;
  case 33:
    // TLS_gs_rr
    O << "), "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  }


  // Fragment 2 encoded into 4 bits for 16 unique commands.
  switch ((Bits >> 16) & 15) {
  default:   // unreachable.
  case 0:
    // ADC32mi, ADC32mi8, ADC32mr, ADD32mi, ADD32mi8, ADD32mr, AND32mi, AND32...
    printi32mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 1:
    // ADC64mi32, ADC64mi8, ADC64mr, ADD64mi32, ADD64mi8, ADD64mr, AND64mi32,...
    printi64mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 2:
    // ADD16mi, ADD16mi8, ADD16mr, AND16mi, AND16mi8, AND16mr, BT16mi8, CMP16...
    printi16mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 3:
    // ADD8mi, ADD8mr, AND8mi, AND8mr, CMP8mi, CMP8mr, LCMPXCHG8, MOV8mi, MOV...
    printi8mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 4:
    // BSF16rr, BSF32rr, BSF64rr, BSR16rr, BSR32rr, BSR64rr, BT16ri8, BT16rr,...
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 5:
    // CMPPDrmi, CMPPSrmi
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 6:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr
    printOperand(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 7:
    // CMPSDrm, Int_CMPSDrm
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 8:
    // CMPSSrm, Int_CMPSSrm
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 9:
    // EXTRACTPSmr, MOVPS2SSmr, MOVSSmr
    printf32mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 10:
    // IMUL16rmi, IMUL16rmi8, IMUL32rmi, IMUL32rmi8, IMUL64rmi32, IMUL64rmi8,...
    O << ", "; 
    printOperand(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 11:
    // LXADD16, LXADD32, LXADD64, XCHG16rm, XCHG32rm, XCHG64rm
    O << "\n"; 
    return true;
    break;
  case 12:
    // MOV64ri64i32, MOVSX16rr8, MOVZX16rr8, MOVZX64rr16, MOVZX64rr32, MOVZX6...
    printOperand(MI, 0, "subreg32"); 
    O << "\n"; 
    return true;
    break;
  case 13:
    // MOVAPDmr, MOVAPSmr, MOVNTDQmr, MOVUPDmr, MOVUPDmr_Int, MOVUPSmr, MOVUP...
    printf128mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 14:
    // MOVDQAmr, MOVDQUmr, MOVDQUmr_Int, MOVNTPDmr, MOVNTPSmr
    printi128mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  case 15:
    // MOVHPDmr, MOVHPSmr, MOVLPDmr, MOVLPSmr, MOVPD2SDmr, MOVSDmr
    printf64mem(MI, 0); 
    O << "\n"; 
    return true;
    break;
  }

}
